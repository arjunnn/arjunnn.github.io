{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/react-spring/web.js","webpack:///./node_modules/gatsby-image/index.js","webpack:///./node_modules/use-3d-effect/dist/index.es.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","__webpack_require__","d","__webpack_exports__","extendedAnimated","useSpring","is","arr","Array","isArray","obj","a","toString","fun","str","num","und","nul","set","Set","map","Map","[object Object]","b","useForceUpdate","f","react","v","withDefault","value","defaultValue","toArray","callProp","_len","args","_key","web_interpolateTo","props","forward","to","from","config","onStart","onRest","onFrame","children","reset","reverse","force","immediate","delay","attach","destroyed","interpolateTo","ref","lazy","getForwardProps","rest","reduce","k","Animated","payload","getValue","child","push","index","splice","detach","AnimatedArray","super","forEach","p","addChild","removeChild","AnimatedObject","values","s","animated","applyAnimatedValues","colorNames","injectApplyAnimatedValues","fn","transform","injectColorNames","names","interpolation","requestFrame","cb","window","requestAnimationFrame","injectStringInterpolator","defaultElement","now","Date","injectDefaultElement","el","createAnimatedStyle","manualFrameloop","animatedApi","node","current","injectCreateAnimatedStyle","factory","web_AnimatedProps","callback","update","style","createInterpolator","range","output","extrapolate","outputRange","inputRange","extrapolateLeft","extrapolateRight","easing","t","input","findRange","inputMin","inputMax","outputMin","outputMax","result","Infinity","interpolate","AnimatedInterpolation","parents","calc","getPayload","AnimatedValue","_value","_this","animatedStyles","startPosition","lastPosition","lastVelocity","startTime","lastTime","done","setValue","flush","size","addAnimatedStyles","styles","add","getChildren","animatedStyle","clear","AnimatedValueArray","n","active","web_controllers","web_update","time","controller","isActive","configIdx","configs","endOfAnimation","valIdx","animatedValues","animation","fromValues","toValues","position","isAnimated","velocity","initialVelocity","duration","decay","Math","exp","abs","numSteps","floor","tension","friction","mass","isOvershooting","clamp","isVelocity","precision","isDisplacement","name","delete","stop","start","has","G","web_Controller","id","idle","hasChanged","guid","local","merged","animations","interpolations","listeners","queue","localQueue","getValues","_ref","_ref$delay","ops","entries","_ref2","entry","previous","sort","diff","onEnd","_ref3","_ref3$from","_ref3$to","_ref4","finished","async","setTimeout","runAsync","_ref5","Promise","resolve","undefined","fresh","then","r","last","_this$props","_this$props$from","_this$props$to","_this$props$config","_ref6","acc","_ref7","isNumber","isString","startsWith","test","isInterpolation","fromValue","toValue","toConfig","parent","interpolation$$1","newValue","currentValue","some","currentValueDiffersFromGoal","equ","hasNewGoal","hasNewConfig","prev","updateConfig","useSprings","mounted","ctrl","isFn","_useMemo","c","destroy","fill","_","newProps","controllers","all","updateCtrl","updateProps","propValues","pause","_useSprings","AnimatedStyle","colors","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","NUMBER","PERCENTAGE","parts","join","rgb","RegExp","rgba","hsl","hsla","hex3","hex4","hex6","hex8","hue2rgb","q","hslToRgb","h","l","g","round","parse255","int","parseInt","parse360","parseFloat","parse1","parsePercentage","colorToRgba","int32Color","color","match","exec","normalizeColor","stringShapeRegex","colorRegex","colorNamesRegex","isUnitlessNumber","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","dangerousStyleValue","isCustomProperty","trim","prop","prefix","charAt","toUpperCase","substring","prefixKey","attributeCache","rangeValue","replace","outputRanges","number","p1","p2","p3","p4","instance","nodeType","setAttribute","scrollTop","scrollLeft","attributes","filter","nodeName","parentNode","textContent","styleName","styleValue","setProperty","dashCase","toLowerCase","getAttribute","lowercase","Component","forceUpdate","propsAnimated","attachProps","oldPropsAnimated","getAnimatedValue","_getValue","animatedProps","react_default","createElement","childRef","handleRef","object","element","_interopRequireDefault","exports","__esModule","default","io","_inheritsLoose2","_assertThisInitialized2","_objectWithoutPropertiesLoose2","_extends2","_react","_propTypes","convertProps","convertedProps","resolutions","fixed","sizes","fluid","imageCache","create","inImageCache","src","WeakMap","listenToIntersections","observer","IntersectionObserver","get","isIntersecting","intersectionRatio","unobserve","rootMargin","observe","noscriptImg","srcSetWebp","srcSet","title","alt","width","height","crossOrigin","Img","forwardRef","onLoad","onError","otherProps","top","left","objectFit","objectPosition","propTypes","func","Image","_React$Component","isVisible","IOSupported","fadeIn","seenBefore","critical","hasNoScript","state","imgLoaded","imgCached","imageRef","createRef","handleImageLoaded","bind","_proto","componentDidMount","onStartLoad","wasCached","img","complete","componentWillUnmount","cleanUpListeners","_this2","imageInCache","setState","currentSrc","render","_convertProps","className","_convertProps$style","_convertProps$imgStyl","imgStyle","_convertProps$placeho","placeholderStyle","placeholderClassName","backgroundColor","Tag","itemProp","shouldReveal","shouldFadeIn","imageStyle","transition","bgColor","delayHideStyle","transitionDelay","imagePlaceholderStyle","placeholderImageProps","image","overflow","JSON","stringify","paddingBottom","aspectRatio","bottom","right","base64","tracedSVG","type","dangerouslySetInnerHTML","__html","_image","divStyle","display","defaultProps","fixedObject","shape","isRequired","string","srcWebp","fluidObject","bool","oneOfType","_default","global","use3dEffect","react_spring__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","MapShim","getIndex","class_1","__entries__","defineProperty","enumerable","configurable","ctx","_i","_a","isBrowser","document","global$1","self","Function","requestAnimationFrame$1","trailingTimeout","REFRESH_DELAY","transitionKeys","mutationObserverSupported","MutationObserver","ResizeObserverController","connected_","mutationEventsAdded_","mutationsObserver_","observers_","onTransitionEnd_","refresh","leadingCall","trailingCall","lastCallTime","resolvePending","proxy","timeoutCallback","timeStamp","throttle","addObserver","connect_","removeObserver","observers","disconnect_","updateObservers_","activeObservers","gatherActive","hasActive","broadcastActive","addEventListener","childList","characterData","subtree","removeEventListener","disconnect","_b","propertyName","getInstance","instance_","defineConfigurable","writable","getWindowOf","ownerDocument","defaultView","emptyRect","createRectInit","toFloat","getBordersSize","positions","getHTMLElementContentRect","clientWidth","clientHeight","getComputedStyle","paddings","positions_1","getPaddings","horizPad","vertPad","boxSizing","documentElement","isDocumentElement","vertScrollbar","horizScrollbar","isSVGGraphicsElement","SVGGraphicsElement","SVGElement","getBBox","getContentRect","bbox","getSVGContentRect","x","y","ResizeObservation","broadcastWidth","broadcastHeight","contentRect_","rect","broadcastRect","ResizeObserverEntry","rectInit","Constr","contentRect","DOMRectReadOnly","ResizeObserverSPI","callbackCtx","activeObservations_","observations_","TypeError","callback_","controller_","callbackCtx_","Element","observations","clearActive","observation","ResizeObserver","method","initialBounds","xys","bounds","ro","getBoundingClientRect","useBoundingClientRect","onMouseLeave","onMouseMove","pageX","pageY"],"mappings":"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","file":"8-935e902fb19268ca0efa.js","sourcesContent":["export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport React, { useState, useCallback, forwardRef, useRef, useEffect, useImperativeHandle, useMemo } from 'react';\n\nconst is = {\n  arr: Array.isArray,\n  obj: a => Object.prototype.toString.call(a) === '[object Object]',\n  fun: a => typeof a === 'function',\n  str: a => typeof a === 'string',\n  num: a => typeof a === 'number',\n  und: a => a === void 0,\n  nul: a => a === null,\n  set: a => a instanceof Set,\n  map: a => a instanceof Map,\n\n  equ(a, b) {\n    if (typeof a !== typeof b) return false;\n    if (is.str(a) || is.num(a)) return a === b;\n    if (is.obj(a) && is.obj(b) && Object.keys(a).length + Object.keys(b).length === 0) return true;\n    let i;\n\n    for (i in a) if (!(i in b)) return false;\n\n    for (i in b) if (a[i] !== b[i]) return false;\n\n    return is.und(i) ? a === b : true;\n  }\n\n};\nfunction merge(target, lowercase) {\n  if (lowercase === void 0) {\n    lowercase = true;\n  }\n\n  return object => (is.arr(object) ? object : Object.keys(object)).reduce((acc, element) => {\n    const key = lowercase ? element[0].toLowerCase() + element.substring(1) : element;\n    acc[key] = target(key);\n    return acc;\n  }, target);\n}\nfunction useForceUpdate() {\n  const _useState = useState(false),\n        f = _useState[1];\n\n  const forceUpdate = useCallback(() => f(v => !v), []);\n  return forceUpdate;\n}\nfunction withDefault(value, defaultValue) {\n  return is.und(value) || is.nul(value) ? defaultValue : value;\n}\nfunction toArray(a) {\n  return !is.und(a) ? is.arr(a) ? a : [a] : [];\n}\nfunction callProp(obj) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  return is.fun(obj) ? obj(...args) : obj;\n}\n\nfunction getForwardProps(props) {\n  const to = props.to,\n        from = props.from,\n        config = props.config,\n        onStart = props.onStart,\n        onRest = props.onRest,\n        onFrame = props.onFrame,\n        children = props.children,\n        reset = props.reset,\n        reverse = props.reverse,\n        force = props.force,\n        immediate = props.immediate,\n        delay = props.delay,\n        attach = props.attach,\n        destroyed = props.destroyed,\n        interpolateTo = props.interpolateTo,\n        ref = props.ref,\n        lazy = props.lazy,\n        forward = _objectWithoutPropertiesLoose(props, [\"to\", \"from\", \"config\", \"onStart\", \"onRest\", \"onFrame\", \"children\", \"reset\", \"reverse\", \"force\", \"immediate\", \"delay\", \"attach\", \"destroyed\", \"interpolateTo\", \"ref\", \"lazy\"]);\n\n  return forward;\n}\n\nfunction interpolateTo(props) {\n  const forward = getForwardProps(props);\n  if (is.und(forward)) return _extends({\n    to: forward\n  }, props);\n  const rest = Object.keys(props).reduce((a, k) => !is.und(forward[k]) ? a : _extends({}, a, {\n    [k]: props[k]\n  }), {});\n  return _extends({\n    to: forward\n  }, rest);\n}\nfunction handleRef(ref, forward) {\n  if (forward) {\n    // If it's a function, assume it's a ref callback\n    if (is.fun(forward)) forward(ref);else if (is.obj(forward)) {\n      forward.current = ref;\n    }\n  }\n\n  return ref;\n}\n\nclass Animated {\n  constructor() {\n    this.payload = void 0;\n    this.children = [];\n  }\n\n  getAnimatedValue() {\n    return this.getValue();\n  }\n\n  getPayload() {\n    return this.payload || this;\n  }\n\n  attach() {}\n\n  detach() {}\n\n  getChildren() {\n    return this.children;\n  }\n\n  addChild(child) {\n    if (this.children.length === 0) this.attach();\n    this.children.push(child);\n  }\n\n  removeChild(child) {\n    const index = this.children.indexOf(child);\n    this.children.splice(index, 1);\n    if (this.children.length === 0) this.detach();\n  }\n\n}\nclass AnimatedArray extends Animated {\n  constructor() {\n    super(...arguments);\n    this.payload = [];\n\n    this.attach = () => this.payload.forEach(p => p instanceof Animated && p.addChild(this));\n\n    this.detach = () => this.payload.forEach(p => p instanceof Animated && p.removeChild(this));\n  }\n\n}\nclass AnimatedObject extends Animated {\n  constructor() {\n    super(...arguments);\n    this.payload = {};\n\n    this.attach = () => Object.values(this.payload).forEach(s => s instanceof Animated && s.addChild(this));\n\n    this.detach = () => Object.values(this.payload).forEach(s => s instanceof Animated && s.removeChild(this));\n  }\n\n  getValue(animated) {\n    if (animated === void 0) {\n      animated = false;\n    }\n\n    const payload = {};\n\n    for (const key in this.payload) {\n      const value = this.payload[key];\n      if (animated && !(value instanceof Animated)) continue;\n      payload[key] = value instanceof Animated ? value[animated ? 'getAnimatedValue' : 'getValue']() : value;\n    }\n\n    return payload;\n  }\n\n  getAnimatedValue() {\n    return this.getValue(true);\n  }\n\n}\n\nlet applyAnimatedValues;\nfunction injectApplyAnimatedValues(fn, transform) {\n  applyAnimatedValues = {\n    fn,\n    transform\n  };\n}\nlet colorNames;\nfunction injectColorNames(names) {\n  colorNames = names;\n}\nlet requestFrame = cb => typeof window !== 'undefined' ? window.requestAnimationFrame(cb) : -1;\nlet cancelFrame = id => {\n  typeof window !== 'undefined' && window.cancelAnimationFrame(id);\n};\nfunction injectFrame(raf, caf) {\n  requestFrame = raf;\n  cancelFrame = caf;\n}\nlet interpolation;\nfunction injectStringInterpolator(fn) {\n  interpolation = fn;\n}\nlet now = () => Date.now();\nfunction injectNow(nowFn) {\n  now = nowFn;\n}\nlet defaultElement;\nfunction injectDefaultElement(el) {\n  defaultElement = el;\n}\nlet animatedApi = node => node.current;\nfunction injectAnimatedApi(fn) {\n  animatedApi = fn;\n}\nlet createAnimatedStyle;\nfunction injectCreateAnimatedStyle(factory) {\n  createAnimatedStyle = factory;\n}\nlet manualFrameloop;\nfunction injectManualFrameloop(callback) {\n  manualFrameloop = callback;\n}\n\nvar Globals = /*#__PURE__*/Object.freeze({\n  get applyAnimatedValues () { return applyAnimatedValues; },\n  injectApplyAnimatedValues: injectApplyAnimatedValues,\n  get colorNames () { return colorNames; },\n  injectColorNames: injectColorNames,\n  get requestFrame () { return requestFrame; },\n  get cancelFrame () { return cancelFrame; },\n  injectFrame: injectFrame,\n  get interpolation () { return interpolation; },\n  injectStringInterpolator: injectStringInterpolator,\n  get now () { return now; },\n  injectNow: injectNow,\n  get defaultElement () { return defaultElement; },\n  injectDefaultElement: injectDefaultElement,\n  get animatedApi () { return animatedApi; },\n  injectAnimatedApi: injectAnimatedApi,\n  get createAnimatedStyle () { return createAnimatedStyle; },\n  injectCreateAnimatedStyle: injectCreateAnimatedStyle,\n  get manualFrameloop () { return manualFrameloop; },\n  injectManualFrameloop: injectManualFrameloop\n});\n\n/**\n * Wraps the `style` property with `AnimatedStyle`.\n */\n\nclass AnimatedProps extends AnimatedObject {\n  constructor(props, callback) {\n    super();\n    this.update = void 0;\n    this.payload = !props.style ? props : _extends({}, props, {\n      style: createAnimatedStyle(props.style)\n    });\n    this.update = callback;\n    this.attach();\n  }\n\n}\n\nconst createAnimatedComponent = Component => {\n  const AnimatedComponent = forwardRef((props, _ref) => {\n    const forceUpdate = useForceUpdate();\n    const mounted = useRef(true);\n    const propsAnimated = useRef(null);\n    const node = useRef(null);\n    const attachProps = useCallback(props => {\n      const oldPropsAnimated = propsAnimated.current;\n\n      const callback = () => {\n        if (node.current) {\n          const didUpdate = applyAnimatedValues.fn(node.current, propsAnimated.current.getAnimatedValue());\n          if (didUpdate === false) forceUpdate();\n        }\n      };\n\n      propsAnimated.current = new AnimatedProps(props, callback);\n      oldPropsAnimated && oldPropsAnimated.detach();\n    }, []);\n    useEffect(() => () => {\n      mounted.current = false;\n      propsAnimated.current && propsAnimated.current.detach();\n    }, []);\n    useImperativeHandle(_ref, () => animatedApi(node, mounted, forceUpdate));\n    attachProps(props);\n\n    const _getValue = propsAnimated.current.getValue(),\n          scrollTop = _getValue.scrollTop,\n          scrollLeft = _getValue.scrollLeft,\n          animatedProps = _objectWithoutPropertiesLoose(_getValue, [\"scrollTop\", \"scrollLeft\"]);\n\n    return React.createElement(Component, _extends({}, animatedProps, {\n      ref: childRef => node.current = handleRef(childRef, _ref)\n    }));\n  });\n  return AnimatedComponent;\n};\n\nfunction createInterpolator(range, output, extrapolate) {\n  if (typeof range === 'function') {\n    return range;\n  }\n\n  if (Array.isArray(range)) {\n    return createInterpolator({\n      range,\n      output: output,\n      extrapolate\n    });\n  }\n\n  if (interpolation && typeof range.output[0] === 'string') {\n    return interpolation(range);\n  }\n\n  const config = range;\n  const outputRange = config.output;\n  const inputRange = config.range || [0, 1];\n  const extrapolateLeft = config.extrapolateLeft || config.extrapolate || 'extend';\n  const extrapolateRight = config.extrapolateRight || config.extrapolate || 'extend';\n\n  const easing = config.easing || (t => t);\n\n  return input => {\n    const range = findRange(input, inputRange);\n    return interpolate(input, inputRange[range], inputRange[range + 1], outputRange[range], outputRange[range + 1], easing, extrapolateLeft, extrapolateRight, config.map);\n  };\n}\n\nfunction interpolate(input, inputMin, inputMax, outputMin, outputMax, easing, extrapolateLeft, extrapolateRight, map) {\n  let result = map ? map(input) : input; // Extrapolate\n\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') return result;else if (extrapolateLeft === 'clamp') result = inputMin;\n  }\n\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') return result;else if (extrapolateRight === 'clamp') result = inputMax;\n  }\n\n  if (outputMin === outputMax) return outputMin;\n  if (inputMin === inputMax) return input <= inputMin ? outputMin : outputMax; // Input Range\n\n  if (inputMin === -Infinity) result = -result;else if (inputMax === Infinity) result = result - inputMin;else result = (result - inputMin) / (inputMax - inputMin); // Easing\n\n  result = easing(result); // Output Range\n\n  if (outputMin === -Infinity) result = -result;else if (outputMax === Infinity) result = result + outputMin;else result = result * (outputMax - outputMin) + outputMin;\n  return result;\n}\n\nfunction findRange(input, inputRange) {\n  for (var i = 1; i < inputRange.length - 1; ++i) if (inputRange[i] >= input) break;\n\n  return i - 1;\n}\n\nclass AnimatedInterpolation extends AnimatedArray {\n  constructor(parents, range, output) {\n    super();\n    this.calc = void 0;\n    this.payload = parents instanceof AnimatedArray && !(parents instanceof AnimatedInterpolation) ? parents.getPayload() : Array.isArray(parents) ? parents : [parents];\n    this.calc = createInterpolator(range, output);\n  }\n\n  getValue() {\n    return this.calc(...this.payload.map(value => value.getValue()));\n  }\n\n  updateConfig(range, output) {\n    this.calc = createInterpolator(range, output);\n  }\n\n  interpolate(range, output) {\n    return new AnimatedInterpolation(this, range, output);\n  }\n\n}\n\nconst interpolate$1 = (parents, range, output) => parents && new AnimatedInterpolation(parents, range, output);\n\nconst config = {\n  default: {\n    tension: 170,\n    friction: 26\n  },\n  gentle: {\n    tension: 120,\n    friction: 14\n  },\n  wobbly: {\n    tension: 180,\n    friction: 12\n  },\n  stiff: {\n    tension: 210,\n    friction: 20\n  },\n  slow: {\n    tension: 280,\n    friction: 60\n  },\n  molasses: {\n    tension: 280,\n    friction: 120\n  }\n};\n\n/** API\n *  useChain(references, timeSteps, timeFrame)\n */\n\nfunction useChain(refs, timeSteps, timeFrame) {\n  if (timeFrame === void 0) {\n    timeFrame = 1000;\n  }\n\n  const previous = useRef();\n  useEffect(() => {\n    if (is.equ(refs, previous.current)) refs.forEach((_ref) => {\n      let current = _ref.current;\n      return current && current.start();\n    });else if (timeSteps) {\n      refs.forEach((_ref2, index) => {\n        let current = _ref2.current;\n\n        if (current) {\n          const ctrls = current.controllers;\n\n          if (ctrls.length) {\n            const t = timeFrame * timeSteps[index];\n            ctrls.forEach(ctrl => {\n              ctrl.queue = ctrl.queue.map(e => _extends({}, e, {\n                delay: e.delay + t\n              }));\n              ctrl.start();\n            });\n          }\n        }\n      });\n    } else refs.reduce((q, _ref3, rI) => {\n      let current = _ref3.current;\n      return q = q.then(() => current.start());\n    }, Promise.resolve());\n    previous.current = refs;\n  });\n}\n\n/**\n * Animated works by building a directed acyclic graph of dependencies\n * transparently when you render your Animated components.\n *\n *               new Animated.Value(0)\n *     .interpolate()        .interpolate()    new Animated.Value(1)\n *         opacity               translateY      scale\n *          style                         transform\n *         View#234                         style\n *                                         View#123\n *\n * A) Top Down phase\n * When an AnimatedValue is updated, we recursively go down through this\n * graph in order to find leaf nodes: the views that we flag as needing\n * an update.\n *\n * B) Bottom Up phase\n * When a view is flagged as needing an update, we recursively go back up\n * in order to build the new value that it needs. The reason why we need\n * this two-phases process is to deal with composite props such as\n * transform which can receive values from multiple parents.\n */\nfunction addAnimatedStyles(node, styles) {\n  if ('update' in node) {\n    styles.add(node);\n  } else {\n    node.getChildren().forEach(child => addAnimatedStyles(child, styles));\n  }\n}\n\nclass AnimatedValue extends Animated {\n  constructor(_value) {\n    var _this;\n\n    super();\n    _this = this;\n    this.animatedStyles = new Set();\n    this.value = void 0;\n    this.startPosition = void 0;\n    this.lastPosition = void 0;\n    this.lastVelocity = void 0;\n    this.startTime = void 0;\n    this.lastTime = void 0;\n    this.done = false;\n\n    this.setValue = function (value, flush) {\n      if (flush === void 0) {\n        flush = true;\n      }\n\n      _this.value = value;\n      if (flush) _this.flush();\n    };\n\n    this.value = _value;\n    this.startPosition = _value;\n    this.lastPosition = _value;\n  }\n\n  flush() {\n    if (this.animatedStyles.size === 0) {\n      addAnimatedStyles(this, this.animatedStyles);\n    }\n\n    this.animatedStyles.forEach(animatedStyle => animatedStyle.update());\n  }\n\n  clearStyles() {\n    this.animatedStyles.clear();\n  }\n\n  getValue() {\n    return this.value;\n  }\n\n  interpolate(range, output) {\n    return new AnimatedInterpolation(this, range, output);\n  }\n\n}\n\nclass AnimatedValueArray extends AnimatedArray {\n  constructor(values) {\n    super();\n    this.payload = values.map(n => new AnimatedValue(n));\n  }\n\n  setValue(value, flush) {\n    if (flush === void 0) {\n      flush = true;\n    }\n\n    if (Array.isArray(value)) {\n      if (value.length === this.payload.length) {\n        value.forEach((v, i) => this.payload[i].setValue(v, flush));\n      }\n    } else {\n      this.payload.forEach(p => p.setValue(value, flush));\n    }\n  }\n\n  getValue() {\n    return this.payload.map(v => v.getValue());\n  }\n\n  interpolate(range, output) {\n    return new AnimatedInterpolation(this, range, output);\n  }\n\n}\n\nlet active = false;\nconst controllers = new Set();\n\nconst update = () => {\n  if (!active) return false;\n  let time = now();\n\n  for (let controller of controllers) {\n    let isActive = false;\n\n    for (let configIdx = 0; configIdx < controller.configs.length; configIdx++) {\n      let config = controller.configs[configIdx];\n      let endOfAnimation, lastTime;\n\n      for (let valIdx = 0; valIdx < config.animatedValues.length; valIdx++) {\n        let animation = config.animatedValues[valIdx]; // If an animation is done, skip, until all of them conclude\n\n        if (animation.done) continue;\n        let from = config.fromValues[valIdx];\n        let to = config.toValues[valIdx];\n        let position = animation.lastPosition;\n        let isAnimated = to instanceof Animated;\n        let velocity = Array.isArray(config.initialVelocity) ? config.initialVelocity[valIdx] : config.initialVelocity;\n        if (isAnimated) to = to.getValue(); // Conclude animation if it's either immediate, or from-values match end-state\n\n        if (config.immediate) {\n          animation.setValue(to);\n          animation.done = true;\n          continue;\n        } // Break animation when string values are involved\n\n\n        if (typeof from === 'string' || typeof to === 'string') {\n          animation.setValue(to);\n          animation.done = true;\n          continue;\n        }\n\n        if (config.duration !== void 0) {\n          /** Duration easing */\n          position = from + config.easing((time - animation.startTime) / config.duration) * (to - from);\n          endOfAnimation = time >= animation.startTime + config.duration;\n        } else if (config.decay) {\n          /** Decay easing */\n          position = from + velocity / (1 - 0.998) * (1 - Math.exp(-(1 - 0.998) * (time - animation.startTime)));\n          endOfAnimation = Math.abs(animation.lastPosition - position) < 0.1;\n          if (endOfAnimation) to = position;\n        } else {\n          /** Spring easing */\n          lastTime = animation.lastTime !== void 0 ? animation.lastTime : time;\n          velocity = animation.lastVelocity !== void 0 ? animation.lastVelocity : config.initialVelocity; // If we lost a lot of frames just jump to the end.\n\n          if (time > lastTime + 64) lastTime = time; // http://gafferongames.com/game-physics/fix-your-timestep/\n\n          let numSteps = Math.floor(time - lastTime);\n\n          for (let i = 0; i < numSteps; ++i) {\n            let force = -config.tension * (position - to);\n            let damping = -config.friction * velocity;\n            let acceleration = (force + damping) / config.mass;\n            velocity = velocity + acceleration * 1 / 1000;\n            position = position + velocity * 1 / 1000;\n          } // Conditions for stopping the spring animation\n\n\n          let isOvershooting = config.clamp && config.tension !== 0 ? from < to ? position > to : position < to : false;\n          let isVelocity = Math.abs(velocity) <= config.precision;\n          let isDisplacement = config.tension !== 0 ? Math.abs(to - position) <= config.precision : true;\n          endOfAnimation = isOvershooting || isVelocity && isDisplacement;\n          animation.lastVelocity = velocity;\n          animation.lastTime = time;\n        } // Trails aren't done until their parents conclude\n\n\n        if (isAnimated && !config.toValues[valIdx].done) endOfAnimation = false;\n\n        if (endOfAnimation) {\n          // Ensure that we end up with a round value\n          if (animation.value !== to) position = to;\n          animation.done = true;\n        } else isActive = true;\n\n        animation.setValue(position);\n        animation.lastPosition = position;\n      } // Keep track of updated values only when necessary\n\n\n      if (controller.props.onFrame) controller.values[config.name] = config.interpolation.getValue();\n    } // Update callbacks in the end of the frame\n\n\n    if (controller.props.onFrame) controller.props.onFrame(controller.values); // Either call onEnd or next frame\n\n    if (!isActive) {\n      controllers.delete(controller);\n      controller.stop(true);\n    }\n  } // Loop over as long as there are controllers ...\n\n\n  if (controllers.size) {\n    if (manualFrameloop) manualFrameloop();else requestFrame(update);\n  } else {\n    active = false;\n  }\n\n  return active;\n};\n\nconst start = controller => {\n  if (!controllers.has(controller)) controllers.add(controller);\n\n  if (!active) {\n    active = true;\n    if (manualFrameloop) requestFrame(manualFrameloop);else requestFrame(update);\n  }\n};\n\nconst stop = controller => {\n  if (controllers.has(controller)) controllers.delete(controller);\n};\n\nlet G = 0;\n\nclass Controller {\n  constructor() {\n    this.id = void 0;\n    this.idle = true;\n    this.hasChanged = false;\n    this.guid = 0;\n    this.local = 0;\n    this.props = {};\n    this.merged = {};\n    this.animations = {};\n    this.interpolations = {};\n    this.values = {};\n    this.configs = [];\n    this.listeners = [];\n    this.queue = [];\n    this.localQueue = void 0;\n\n    this.getValues = () => this.interpolations;\n\n    this.id = G++;\n  }\n  /** update(props)\n   *  This function filters input props and creates an array of tasks which are executed in .start()\n   *  Each task is allowed to carry a delay, which means it can execute asnychroneously */\n\n\n  update(args) {\n    //this._id = n + this.id\n    if (!args) return this; // Extract delay and the to-prop from props\n\n    const _ref = interpolateTo(args),\n          _ref$delay = _ref.delay,\n          delay = _ref$delay === void 0 ? 0 : _ref$delay,\n          to = _ref.to,\n          props = _objectWithoutPropertiesLoose(_ref, [\"delay\", \"to\"]);\n\n    if (is.arr(to) || is.fun(to)) {\n      // If config is either a function or an array queue it up as is\n      this.queue.push(_extends({}, props, {\n        delay,\n        to\n      }));\n    } else if (to) {\n      // Otherwise go through each key since it could be delayed individually\n      let ops = {};\n      Object.entries(to).forEach((_ref2) => {\n        let k = _ref2[0],\n            v = _ref2[1];\n\n        // Fetch delay and create an entry, consisting of the to-props, the delay, and basic props\n        const entry = _extends({\n          to: {\n            [k]: v\n          },\n          delay: callProp(delay, k)\n        }, props);\n\n        const previous = ops[entry.delay] && ops[entry.delay].to;\n        ops[entry.delay] = _extends({}, ops[entry.delay], entry, {\n          to: _extends({}, previous, entry.to)\n        });\n      });\n      this.queue = Object.values(ops);\n    } // Sort queue, so that async calls go last\n\n\n    this.queue = this.queue.sort((a, b) => a.delay - b.delay); // Diff the reduced props immediately (they'll contain the from-prop and some config)\n\n    this.diff(props);\n    return this;\n  }\n  /** start(onEnd)\n   *  This function either executes a queue, if present, or starts the frameloop, which animates */\n\n\n  start(onEnd) {\n    // If a queue is present we must excecute it\n    if (this.queue.length) {\n      this.idle = false; // Updates can interrupt trailing queues, in that case we just merge values\n\n      if (this.localQueue) {\n        this.localQueue.forEach((_ref3) => {\n          let _ref3$from = _ref3.from,\n              from = _ref3$from === void 0 ? {} : _ref3$from,\n              _ref3$to = _ref3.to,\n              to = _ref3$to === void 0 ? {} : _ref3$to;\n          if (is.obj(from)) this.merged = _extends({}, from, this.merged);\n          if (is.obj(to)) this.merged = _extends({}, this.merged, to);\n        });\n      } // The guid helps us tracking frames, a new queue over an old one means an override\n      // We discard async calls in that caseÍ\n\n\n      const local = this.local = ++this.guid;\n      const queue = this.localQueue = this.queue;\n      this.queue = []; // Go through each entry and execute it\n\n      queue.forEach((_ref4, index) => {\n        let delay = _ref4.delay,\n            props = _objectWithoutPropertiesLoose(_ref4, [\"delay\"]);\n\n        const cb = finished => {\n          if (index === queue.length - 1 && local === this.guid && finished) {\n            this.idle = true;\n            if (this.props.onRest) this.props.onRest(this.merged);\n          }\n\n          if (onEnd) onEnd();\n        }; // Entries can be delayed, ansyc or immediate\n\n\n        let async = is.arr(props.to) || is.fun(props.to);\n\n        if (delay) {\n          setTimeout(() => {\n            if (local === this.guid) {\n              if (async) this.runAsync(props, cb);else this.diff(props).start(cb);\n            }\n          }, delay);\n        } else if (async) this.runAsync(props, cb);else this.diff(props).start(cb);\n      });\n    } // Otherwise we kick of the frameloop\n    else {\n        if (is.fun(onEnd)) this.listeners.push(onEnd);\n        if (this.props.onStart) this.props.onStart();\n        start(this);\n      }\n\n    return this;\n  }\n\n  stop(finished) {\n    this.listeners.forEach(onEnd => onEnd(finished));\n    this.listeners = [];\n    return this;\n  }\n  /** Pause sets onEnd listeners free, but also removes the controller from the frameloop */\n\n\n  pause(finished) {\n    this.stop(true);\n    if (finished) stop(this);\n    return this;\n  }\n\n  runAsync(_ref5, onEnd) {\n    var _this = this;\n\n    let delay = _ref5.delay,\n        props = _objectWithoutPropertiesLoose(_ref5, [\"delay\"]);\n\n    const local = this.local; // If \"to\" is either a function or an array it will be processed async, therefor \"to\" should be empty right now\n    // If the view relies on certain values \"from\" has to be present\n\n    let queue = Promise.resolve(undefined);\n\n    if (is.arr(props.to)) {\n      for (let i = 0; i < props.to.length; i++) {\n        const index = i;\n\n        const fresh = _extends({}, props, interpolateTo(props.to[index]));\n\n        if (is.arr(fresh.config)) fresh.config = fresh.config[index];\n        queue = queue.then(() => {\n          //this.stop()\n          if (local === this.guid) return new Promise(r => this.diff(fresh).start(r));\n        });\n      }\n    } else if (is.fun(props.to)) {\n      let index = 0;\n      let last;\n      queue = queue.then(() => props.to( // next(props)\n      p => {\n        const fresh = _extends({}, props, interpolateTo(p));\n\n        if (is.arr(fresh.config)) fresh.config = fresh.config[index];\n        index++; //this.stop()\n\n        if (local === this.guid) return last = new Promise(r => this.diff(fresh).start(r));\n        return;\n      }, // cancel()\n      function (finished) {\n        if (finished === void 0) {\n          finished = true;\n        }\n\n        return _this.stop(finished);\n      }).then(() => last));\n    }\n\n    queue.then(onEnd);\n  }\n\n  diff(props) {\n    this.props = _extends({}, this.props, props);\n    let _this$props = this.props,\n        _this$props$from = _this$props.from,\n        from = _this$props$from === void 0 ? {} : _this$props$from,\n        _this$props$to = _this$props.to,\n        to = _this$props$to === void 0 ? {} : _this$props$to,\n        _this$props$config = _this$props.config,\n        config = _this$props$config === void 0 ? {} : _this$props$config,\n        reverse = _this$props.reverse,\n        attach = _this$props.attach,\n        reset = _this$props.reset,\n        immediate = _this$props.immediate; // Reverse values when requested\n\n    if (reverse) {\n      var _ref6 = [to, from];\n      from = _ref6[0];\n      to = _ref6[1];\n    } // This will collect all props that were ever set, reset merged props when necessary\n\n\n    this.merged = _extends({}, from, this.merged, to);\n    this.hasChanged = false; // Attachment handling, trailed springs can \"attach\" themselves to a previous spring\n\n    let target = attach && attach(this); // Reduces input { name: value } pairs into animated values\n\n    this.animations = Object.entries(this.merged).reduce((acc, _ref7) => {\n      let name = _ref7[0],\n          value = _ref7[1];\n      // Issue cached entries, except on reset\n      let entry = acc[name] || {}; // Figure out what the value is supposed to be\n\n      const isNumber = is.num(value);\n      const isString = is.str(value) && !value.startsWith('#') && !/\\d/.test(value) && !colorNames[value];\n      const isArray = is.arr(value);\n      const isInterpolation = !isNumber && !isArray && !isString;\n      let fromValue = !is.und(from[name]) ? from[name] : value;\n      let toValue = isNumber || isArray ? value : isString ? value : 1;\n      let toConfig = callProp(config, name);\n      if (target) toValue = target.animations[name].parent;\n      let parent = entry.parent,\n          interpolation$$1 = entry.interpolation,\n          toValues = toArray(target ? toValue.getPayload() : toValue),\n          animatedValues;\n      let newValue = value;\n      if (isInterpolation) newValue = interpolation({\n        range: [0, 1],\n        output: [value, value]\n      })(1);\n      let currentValue = interpolation$$1 && interpolation$$1.getValue(); // Change detection flags\n\n      const isFirst = is.und(parent);\n      const isActive = !isFirst && entry.animatedValues.some(v => !v.done);\n      const currentValueDiffersFromGoal = !is.equ(newValue, currentValue);\n      const hasNewGoal = !is.equ(newValue, entry.previous);\n      const hasNewConfig = !is.equ(toConfig, entry.config); // Change animation props when props indicate a new goal (new value differs from previous one)\n      // and current values differ from it. Config changes trigger a new update as well (though probably shouldn't?)\n\n      if (reset || hasNewGoal && currentValueDiffersFromGoal || hasNewConfig) {\n        // Convert regular values into animated values, ALWAYS re-use if possible\n        if (isNumber || isString) parent = interpolation$$1 = entry.parent || new AnimatedValue(fromValue);else if (isArray) parent = interpolation$$1 = entry.parent || new AnimatedValueArray(fromValue);else if (isInterpolation) {\n          let prev = entry.interpolation && entry.interpolation.calc(entry.parent.value);\n          prev = prev !== void 0 && !reset ? prev : fromValue;\n\n          if (entry.parent) {\n            parent = entry.parent;\n            parent.setValue(0, false);\n          } else parent = new AnimatedValue(0);\n\n          const range = {\n            output: [prev, value]\n          };\n\n          if (entry.interpolation) {\n            interpolation$$1 = entry.interpolation;\n            entry.interpolation.updateConfig(range);\n          } else interpolation$$1 = parent.interpolate(range);\n        }\n        toValues = toArray(target ? toValue.getPayload() : toValue);\n        animatedValues = toArray(parent.getPayload());\n        if (reset && !isInterpolation) parent.setValue(fromValue, false);\n        this.hasChanged = true; // Reset animated values\n\n        animatedValues.forEach(value => {\n          value.startPosition = value.value;\n          value.lastPosition = value.value;\n          value.lastVelocity = isActive ? value.lastVelocity : undefined;\n          value.lastTime = isActive ? value.lastTime : undefined;\n          value.startTime = now();\n          value.done = false;\n          value.animatedStyles.clear();\n        }); // Set immediate values\n\n        if (callProp(immediate, name)) {\n          parent.setValue(isInterpolation ? toValue : value, false);\n        }\n\n        return _extends({}, acc, {\n          [name]: _extends({}, entry, {\n            name,\n            parent,\n            interpolation: interpolation$$1,\n            animatedValues,\n            toValues,\n            previous: newValue,\n            config: toConfig,\n            fromValues: toArray(parent.getValue()),\n            immediate: callProp(immediate, name),\n            initialVelocity: withDefault(toConfig.velocity, 0),\n            clamp: withDefault(toConfig.clamp, false),\n            precision: withDefault(toConfig.precision, 0.01),\n            tension: withDefault(toConfig.tension, 170),\n            friction: withDefault(toConfig.friction, 26),\n            mass: withDefault(toConfig.mass, 1),\n            duration: toConfig.duration,\n            easing: withDefault(toConfig.easing, t => t),\n            decay: toConfig.decay\n          })\n        });\n      } else {\n        if (!currentValueDiffersFromGoal) {\n          // So ... the current target value (newValue) appears to be different from the previous value,\n          // which normally constitutes an update, but the actual value (currentValue) matches the target!\n          // In order to resolve this without causing an animation update we silently flag the animation as done,\n          // which it technically is. Interpolations also needs a config update with their target set to 1.\n          if (isInterpolation) {\n            parent.setValue(1, false);\n            interpolation$$1.updateConfig({\n              output: [newValue, newValue]\n            });\n          }\n\n          parent.done = true;\n          this.hasChanged = true;\n          return _extends({}, acc, {\n            [name]: _extends({}, acc[name], {\n              previous: newValue\n            })\n          });\n        }\n\n        return acc;\n      }\n    }, this.animations);\n\n    if (this.hasChanged) {\n      // Make animations available to frameloop\n      this.configs = Object.values(this.animations);\n      this.values = {};\n      this.interpolations = {};\n\n      for (let key in this.animations) {\n        this.interpolations[key] = this.animations[key].interpolation;\n        this.values[key] = this.animations[key].interpolation.getValue();\n      }\n    }\n\n    return this;\n  }\n\n  destroy() {\n    this.stop();\n    this.props = {};\n    this.merged = {};\n    this.animations = {};\n    this.interpolations = {};\n    this.values = {};\n    this.configs = [];\n    this.local = 0;\n  }\n\n}\n\n/** API\n * const props = useSprings(number, [{ ... }, { ... }, ...])\n * const [props, set] = useSprings(number, (i, controller) => ({ ... }))\n */\n\nconst useSprings = (length, props) => {\n  const mounted = useRef(false);\n  const ctrl = useRef();\n  const isFn = is.fun(props); // The controller maintains the animation values, starts and stops animations\n\n  const _useMemo = useMemo(() => {\n    // Remove old controllers\n    if (ctrl.current) {\n      ctrl.current.map(c => c.destroy());\n      ctrl.current = undefined;\n    }\n\n    let ref;\n    return [new Array(length).fill().map((_, i) => {\n      const ctrl = new Controller();\n      const newProps = isFn ? callProp(props, i, ctrl) : props[i];\n      if (i === 0) ref = newProps.ref;\n      ctrl.update(newProps);\n      if (!ref) ctrl.start();\n      return ctrl;\n    }), ref];\n  }, [length]),\n        controllers = _useMemo[0],\n        ref = _useMemo[1];\n\n  ctrl.current = controllers; // The hooks reference api gets defined here ...\n\n  const api = useImperativeHandle(ref, () => ({\n    start: () => Promise.all(ctrl.current.map(c => new Promise(r => c.start(r)))),\n    stop: finished => ctrl.current.forEach(c => c.stop(finished)),\n\n    get controllers() {\n      return ctrl.current;\n    }\n\n  })); // This function updates the controllers\n\n  const updateCtrl = useMemo(() => updateProps => ctrl.current.map((c, i) => {\n    c.update(isFn ? callProp(updateProps, i, c) : updateProps[i]);\n    if (!ref) c.start();\n  }), [length]); // Update controller if props aren't functional\n\n  useEffect(() => {\n    if (mounted.current) {\n      if (!isFn) updateCtrl(props);\n    } else if (!ref) ctrl.current.forEach(c => c.start());\n  }); // Update mounted flag and destroy controller on unmount\n\n  useEffect(() => (mounted.current = true, () => ctrl.current.forEach(c => c.destroy())), []); // Return animated props, or, anim-props + the update-setter above\n\n  const propValues = ctrl.current.map(c => c.getValues());\n  return isFn ? [propValues, updateCtrl, finished => ctrl.current.forEach(c => c.pause(finished))] : propValues;\n};\n\n/** API\n * const props = useSpring({ ... })\n * const [props, set] = useSpring(() => ({ ... }))\n */\n\nconst useSpring = props => {\n  const isFn = is.fun(props);\n\n  const _useSprings = useSprings(1, isFn ? props : [props]),\n        result = _useSprings[0],\n        set = _useSprings[1],\n        pause = _useSprings[2];\n\n  return isFn ? [result[0], set, pause] : result;\n};\n\n/** API\n * const trails = useTrail(number, { ... })\n * const [trails, set] = useTrail(number, () => ({ ... }))\n */\n\nconst useTrail = (length, props) => {\n  const mounted = useRef(false);\n  const isFn = is.fun(props);\n  const updateProps = callProp(props);\n  const instances = useRef();\n\n  const _useSprings = useSprings(length, (i, ctrl) => {\n    if (i === 0) instances.current = [];\n    instances.current.push(ctrl);\n    return _extends({}, updateProps, {\n      config: callProp(updateProps.config, i),\n      attach: i > 0 && (() => instances.current[i - 1])\n    });\n  }),\n        result = _useSprings[0],\n        set = _useSprings[1],\n        pause = _useSprings[2]; // Set up function to update controller\n\n\n  const updateCtrl = useMemo(() => props => set((i, ctrl) => {\n    const last = props.reverse ? i === 0 : length - 1 === i;\n    const attachIdx = props.reverse ? i + 1 : i - 1;\n    const attachController = instances.current[attachIdx];\n    return _extends({}, props, {\n      config: callProp(props.config || updateProps.config, i),\n      attach: attachController && (() => attachController)\n    });\n  }), [length, updateProps.reverse]); // Update controller if props aren't functional\n\n  useEffect(() => void (mounted.current && !isFn && updateCtrl(props))); // Update mounted flag and destroy controller on unmount\n\n  useEffect(() => void (mounted.current = true), []);\n  return isFn ? [result, updateCtrl, pause] : result;\n};\n\n/** API\n * const transitions = useTransition(items, itemKeys, { ... })\n * const [transitions, update] = useTransition(items, itemKeys, () => ({ ... }))\n */\n\nlet guid = 0;\nconst ENTER = 'enter';\nconst LEAVE = 'leave';\nconst UPDATE = 'update';\n\nconst mapKeys = (items, keys) => (typeof keys === 'function' ? items.map(keys) : toArray(keys)).map(String);\n\nconst get = props => {\n  let items = props.items,\n      _props$keys = props.keys,\n      keys = _props$keys === void 0 ? item => item : _props$keys,\n      rest = _objectWithoutPropertiesLoose(props, [\"items\", \"keys\"]);\n\n  items = toArray(items !== void 0 ? items : null);\n  return _extends({\n    items,\n    keys: mapKeys(items, keys)\n  }, rest);\n};\n\nfunction useTransition(input, keyTransform, config) {\n  const props = _extends({\n    items: input,\n    keys: keyTransform || (i => i)\n  }, config);\n\n  const _get = get(props),\n        _get$lazy = _get.lazy,\n        lazy = _get$lazy === void 0 ? false : _get$lazy,\n        _get$unique = _get.unique,\n        _get$reset = _get.reset,\n        reset = _get$reset === void 0 ? false : _get$reset,\n        enter = _get.enter,\n        leave = _get.leave,\n        update = _get.update,\n        onDestroyed = _get.onDestroyed,\n        keys = _get.keys,\n        items = _get.items,\n        onFrame = _get.onFrame,\n        _onRest = _get.onRest,\n        onStart = _get.onStart,\n        ref = _get.ref,\n        extra = _objectWithoutPropertiesLoose(_get, [\"lazy\", \"unique\", \"reset\", \"enter\", \"leave\", \"update\", \"onDestroyed\", \"keys\", \"items\", \"onFrame\", \"onRest\", \"onStart\", \"ref\"]);\n\n  const forceUpdate = useForceUpdate();\n  const mounted = useRef(false);\n  const state = useRef({\n    mounted: false,\n    first: true,\n    deleted: [],\n    current: {},\n    transitions: [],\n    prevProps: {},\n    paused: !!props.ref,\n    instances: !mounted.current && new Map(),\n    forceUpdate\n  });\n  useImperativeHandle(props.ref, () => ({\n    start: () => Promise.all(Array.from(state.current.instances).map((_ref) => {\n      let c = _ref[1];\n      return new Promise(r => c.start(r));\n    })),\n    stop: finished => Array.from(state.current.instances).forEach((_ref2) => {\n      let c = _ref2[1];\n      return c.stop(finished);\n    }),\n\n    get controllers() {\n      return Array.from(state.current.instances).map((_ref3) => {\n        let c = _ref3[1];\n        return c;\n      });\n    }\n\n  })); // Update state\n\n  state.current = diffItems(state.current, props);\n\n  if (state.current.changed) {\n    // Update state\n    state.current.transitions.forEach(transition => {\n      const slot = transition.slot,\n            from = transition.from,\n            to = transition.to,\n            config = transition.config,\n            trail = transition.trail,\n            key = transition.key,\n            item = transition.item;\n      if (!state.current.instances.has(key)) state.current.instances.set(key, new Controller()); // update the map object\n\n      const ctrl = state.current.instances.get(key);\n\n      const newProps = _extends({}, extra, {\n        to,\n        from,\n        config,\n        ref,\n        onRest: values => {\n          if (state.current.mounted) {\n            if (transition.destroyed) {\n              // If no ref is given delete destroyed items immediately\n              if (!ref && !lazy) cleanUp(state, key);\n              if (onDestroyed) onDestroyed(item);\n            } // A transition comes to rest once all its springs conclude\n\n\n            const curInstances = Array.from(state.current.instances);\n            const active = curInstances.some((_ref4) => {\n              let c = _ref4[1];\n              return !c.idle;\n            });\n            if (!active && (ref || lazy) && state.current.deleted.length > 0) cleanUp(state);\n            if (_onRest) _onRest(item, slot, values);\n          }\n        },\n        onStart: onStart && (() => onStart(item, slot)),\n        onFrame: onFrame && (values => onFrame(item, slot, values)),\n        delay: trail,\n        reset: reset && slot === ENTER // Update controller\n\n      });\n\n      ctrl.update(newProps);\n      if (!state.current.paused) ctrl.start();\n    });\n  }\n\n  useEffect(() => {\n    state.current.mounted = mounted.current = true;\n    return () => {\n      state.current.mounted = mounted.current = false;\n      Array.from(state.current.instances).map((_ref5) => {\n        let c = _ref5[1];\n        return c.destroy();\n      });\n      state.current.instances.clear();\n    };\n  }, []);\n  return state.current.transitions.map((_ref6) => {\n    let item = _ref6.item,\n        slot = _ref6.slot,\n        key = _ref6.key;\n    return {\n      item,\n      key,\n      state: slot,\n      props: state.current.instances.get(key).getValues()\n    };\n  });\n}\n\nfunction cleanUp(state, filterKey) {\n  const deleted = state.current.deleted;\n\n  for (let _ref7 of deleted) {\n    let key = _ref7.key;\n\n    const filter = t => t.key !== key;\n\n    if (is.und(filterKey) || filterKey === key) {\n      state.current.instances.delete(key);\n      state.current.transitions = state.current.transitions.filter(filter);\n      state.current.deleted = state.current.deleted.filter(filter);\n    }\n  }\n\n  state.current.forceUpdate();\n}\n\nfunction diffItems(_ref8, props) {\n  let first = _ref8.first,\n      prevProps = _ref8.prevProps,\n      state = _objectWithoutPropertiesLoose(_ref8, [\"first\", \"prevProps\"]);\n\n  let _get2 = get(props),\n      items = _get2.items,\n      keys = _get2.keys,\n      initial = _get2.initial,\n      from = _get2.from,\n      enter = _get2.enter,\n      leave = _get2.leave,\n      update = _get2.update,\n      _get2$trail = _get2.trail,\n      trail = _get2$trail === void 0 ? 0 : _get2$trail,\n      unique = _get2.unique,\n      config = _get2.config,\n      _get2$order = _get2.order,\n      order = _get2$order === void 0 ? [ENTER, LEAVE, UPDATE] : _get2$order;\n\n  let _get3 = get(prevProps),\n      _keys = _get3.keys,\n      _items = _get3.items;\n\n  let current = _extends({}, state.current);\n\n  let deleted = [...state.deleted]; // Compare next keys with current keys\n\n  let currentKeys = Object.keys(current);\n  let currentSet = new Set(currentKeys);\n  let nextSet = new Set(keys);\n  let added = keys.filter(item => !currentSet.has(item));\n  let removed = state.transitions.filter(item => !item.destroyed && !nextSet.has(item.originalKey)).map(i => i.originalKey);\n  let updated = keys.filter(item => currentSet.has(item));\n  let delay = -trail;\n\n  while (order.length) {\n    const changeType = order.shift();\n\n    switch (changeType) {\n      case ENTER:\n        {\n          added.forEach((key, index) => {\n            // In unique mode, remove fading out transitions if their key comes in again\n            if (unique && deleted.find(d => d.originalKey === key)) deleted = deleted.filter(t => t.originalKey !== key);\n            const keyIndex = keys.indexOf(key);\n            const item = items[keyIndex];\n            const slot = first && initial !== void 0 ? 'initial' : ENTER;\n            current[key] = {\n              slot,\n              originalKey: key,\n              key: unique ? String(key) : guid++,\n              item,\n              trail: delay = delay + trail,\n              config: callProp(config, item, slot),\n              from: callProp(first ? initial !== void 0 ? initial || {} : from : from, item),\n              to: callProp(enter, item)\n            };\n          });\n          break;\n        }\n\n      case LEAVE:\n        {\n          removed.forEach(key => {\n            const keyIndex = _keys.indexOf(key);\n\n            const item = _items[keyIndex];\n            const slot = LEAVE;\n            deleted.unshift(_extends({}, current[key], {\n              slot,\n              destroyed: true,\n              left: _keys[Math.max(0, keyIndex - 1)],\n              right: _keys[Math.min(_keys.length, keyIndex + 1)],\n              trail: delay = delay + trail,\n              config: callProp(config, item, slot),\n              to: callProp(leave, item)\n            }));\n            delete current[key];\n          });\n          break;\n        }\n\n      case UPDATE:\n        {\n          updated.forEach(key => {\n            const keyIndex = keys.indexOf(key);\n            const item = items[keyIndex];\n            const slot = UPDATE;\n            current[key] = _extends({}, current[key], {\n              item,\n              slot,\n              trail: delay = delay + trail,\n              config: callProp(config, item, slot),\n              to: callProp(update, item)\n            });\n          });\n          break;\n        }\n    }\n  }\n\n  let out = keys.map(key => current[key]); // This tries to restore order for deleted items by finding their last known siblings\n  // only using the left sibling to keep order placement consistent for all deleted items\n\n  deleted.forEach((_ref9) => {\n    let left = _ref9.left,\n        right = _ref9.right,\n        item = _objectWithoutPropertiesLoose(_ref9, [\"left\", \"right\"]);\n\n    let pos; // Was it the element on the left, if yes, move there ...\n\n    if ((pos = out.findIndex(t => t.originalKey === left)) !== -1) pos += 1; // And if nothing else helps, move it to the start ¯\\_(ツ)_/¯\n\n    pos = Math.max(0, pos);\n    out = [...out.slice(0, pos), item, ...out.slice(pos)];\n  });\n  return _extends({}, state, {\n    changed: added.length || removed.length || updated.length,\n    first: first && added.length === 0,\n    transitions: out,\n    current,\n    deleted,\n    prevProps: props\n  });\n}\n\nclass AnimatedStyle extends AnimatedObject {\n  constructor(style) {\n    if (style === void 0) {\n      style = {};\n    }\n\n    super();\n\n    if (style.transform && !(style.transform instanceof Animated)) {\n      style = applyAnimatedValues.transform(style);\n    }\n\n    this.payload = style;\n  }\n\n}\n\n// http://www.w3.org/TR/css3-color/#svg-color\nconst colors = {\n  transparent: 0x00000000,\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff\n};\n\n// const INTEGER = '[-+]?\\\\d+';\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call() {\n  for (var _len = arguments.length, parts = new Array(_len), _key = 0; _key < _len; _key++) {\n    parts[_key] = arguments[_key];\n  }\n\n  return '\\\\(\\\\s*(' + parts.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nconst rgb = new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER));\nconst rgba = new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER));\nconst hsl = new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE));\nconst hsla = new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER));\nconst hex3 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\nconst hex4 = /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/;\nconst hex6 = /^#([0-9a-fA-F]{6})$/;\nconst hex8 = /^#([0-9a-fA-F]{8})$/;\n\n/*\nhttps://github.com/react-community/normalize-css-color\n\nBSD 3-Clause License\n\nCopyright (c) 2016, React Community\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright notice,\n  this list of conditions and the following disclaimer in the documentation\n  and/or other materials provided with the distribution.\n\n* Neither the name of the copyright holder nor the names of its\n  contributors may be used to endorse or promote products derived from\n  this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\nfunction normalizeColor(color) {\n  let match;\n\n  if (typeof color === 'number') {\n    return color >>> 0 === color && color >= 0 && color <= 0xffffffff ? color : null;\n  } // Ordered based on occurrences on Facebook codebase\n\n\n  if (match = hex6.exec(color)) return parseInt(match[1] + 'ff', 16) >>> 0;\n  if (colors.hasOwnProperty(color)) return colors[color];\n\n  if (match = rgb.exec(color)) {\n    return (parse255(match[1]) << 24 | // r\n    parse255(match[2]) << 16 | // g\n    parse255(match[3]) << 8 | // b\n    0x000000ff) >>> // a\n    0;\n  }\n\n  if (match = rgba.exec(color)) {\n    return (parse255(match[1]) << 24 | // r\n    parse255(match[2]) << 16 | // g\n    parse255(match[3]) << 8 | // b\n    parse1(match[4])) >>> // a\n    0;\n  }\n\n  if (match = hex3.exec(color)) {\n    return parseInt(match[1] + match[1] + // r\n    match[2] + match[2] + // g\n    match[3] + match[3] + // b\n    'ff', // a\n    16) >>> 0;\n  } // https://drafts.csswg.org/css-color-4/#hex-notation\n\n\n  if (match = hex8.exec(color)) return parseInt(match[1], 16) >>> 0;\n\n  if (match = hex4.exec(color)) {\n    return parseInt(match[1] + match[1] + // r\n    match[2] + match[2] + // g\n    match[3] + match[3] + // b\n    match[4] + match[4], // a\n    16) >>> 0;\n  }\n\n  if (match = hsl.exec(color)) {\n    return (hslToRgb(parse360(match[1]), // h\n    parsePercentage(match[2]), // s\n    parsePercentage(match[3]) // l\n    ) | 0x000000ff) >>> // a\n    0;\n  }\n\n  if (match = hsla.exec(color)) {\n    return (hslToRgb(parse360(match[1]), // h\n    parsePercentage(match[2]), // s\n    parsePercentage(match[3]) // l\n    ) | parse1(match[4])) >>> // a\n    0;\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n  return p;\n}\n\nfunction hslToRgb(h, s, l) {\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n  return Math.round(r * 255) << 24 | Math.round(g * 255) << 16 | Math.round(b * 255) << 8;\n}\n\nfunction parse255(str) {\n  const int = parseInt(str, 10);\n  if (int < 0) return 0;\n  if (int > 255) return 255;\n  return int;\n}\n\nfunction parse360(str) {\n  const int = parseFloat(str);\n  return (int % 360 + 360) % 360 / 360;\n}\n\nfunction parse1(str) {\n  const num = parseFloat(str);\n  if (num < 0) return 0;\n  if (num > 1) return 255;\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str) {\n  // parseFloat conveniently ignores the final %\n  const int = parseFloat(str);\n  if (int < 0) return 0;\n  if (int > 100) return 1;\n  return int / 100;\n}\n\nfunction colorToRgba(input) {\n  let int32Color = normalizeColor(input);\n  if (int32Color === null) return input;\n  int32Color = int32Color || 0;\n  let r = (int32Color & 0xff000000) >>> 24;\n  let g = (int32Color & 0x00ff0000) >>> 16;\n  let b = (int32Color & 0x0000ff00) >>> 8;\n  let a = (int32Color & 0x000000ff) / 255;\n  return `rgba(${r}, ${g}, ${b}, ${a})`;\n} // Problem: https://github.com/animatedjs/animated/pull/102\n// Solution: https://stackoverflow.com/questions/638565/parsing-scientific-notation-sensibly/658662\n\n\nconst stringShapeRegex = /[+\\-]?(?:0|[1-9]\\d*)(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g; // Covers rgb, rgba, hsl, hsla\n// Taken from https://gist.github.com/olmokramer/82ccce673f86db7cda5e\n\nconst colorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d\\.]+%?\\))/gi; // Covers color names (transparent, blue, etc.)\n\nconst colorNamesRegex = new RegExp(`(${Object.keys(colors).join('|')})`, 'g');\n/**\n * Supports string shapes by extracting numbers so new values can be computed,\n * and recombines those values into new strings of the same shape.  Supports\n * things like:\n *\n *   rgba(123, 42, 99, 0.36)           // colors\n *   -45deg                            // values with units\n *   0 2px 2px 0px rgba(0, 0, 0, 0.12) // box shadows\n */\n\nconst createStringInterpolator = config => {\n  // Replace colors with rgba\n  const outputRange = config.output.map(rangeValue => rangeValue.replace(colorRegex, colorToRgba)).map(rangeValue => rangeValue.replace(colorNamesRegex, colorToRgba));\n  const outputRanges = outputRange[0].match(stringShapeRegex).map(() => []);\n  outputRange.forEach(value => {\n    value.match(stringShapeRegex).forEach((number, i) => outputRanges[i].push(+number));\n  });\n  const interpolations = outputRange[0].match(stringShapeRegex).map((_value, i) => createInterpolator(_extends({}, config, {\n    output: outputRanges[i]\n  })));\n  return input => {\n    let i = 0;\n    return outputRange[0] // 'rgba(0, 100, 200, 0)'\n    // ->\n    // 'rgba(${interpolations[0](input)}, ${interpolations[1](input)}, ...'\n    .replace(stringShapeRegex, () => interpolations[i++](input)) // rgba requires that the r,g,b are integers.... so we want to round them, but we *dont* want to\n    // round the opacity (4th column).\n    .replace(/rgba\\(([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+), ([0-9\\.-]+)\\)/gi, (_, p1, p2, p3, p4) => `rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`);\n  };\n};\n\nlet isUnitlessNumber = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  columns: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridRowEnd: true,\n  gridRowSpan: true,\n  gridRowStart: true,\n  gridColumn: true,\n  gridColumnEnd: true,\n  gridColumnSpan: true,\n  gridColumnStart: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related properties\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nconst prefixKey = (prefix, key) => prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\nconst prefixes = ['Webkit', 'Ms', 'Moz', 'O'];\nisUnitlessNumber = Object.keys(isUnitlessNumber).reduce((acc, prop) => {\n  prefixes.forEach(prefix => acc[prefixKey(prefix, prop)] = acc[prop]);\n  return acc;\n}, isUnitlessNumber);\n\nfunction dangerousStyleValue(name, value, isCustomProperty) {\n  if (value == null || typeof value === 'boolean' || value === '') return '';\n  if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers\n\n  return ('' + value).trim();\n}\n\nconst attributeCache = {};\ninjectCreateAnimatedStyle(style => new AnimatedStyle(style));\ninjectDefaultElement('div');\ninjectStringInterpolator(createStringInterpolator);\ninjectColorNames(colors);\ninjectApplyAnimatedValues((instance, props) => {\n  if (instance.nodeType && instance.setAttribute !== undefined) {\n    const style = props.style,\n          children = props.children,\n          scrollTop = props.scrollTop,\n          scrollLeft = props.scrollLeft,\n          attributes = _objectWithoutPropertiesLoose(props, [\"style\", \"children\", \"scrollTop\", \"scrollLeft\"]);\n\n    const filter = instance.nodeName === 'filter' || instance.parentNode && instance.parentNode.nodeName === 'filter';\n    if (scrollTop !== void 0) instance.scrollTop = scrollTop;\n    if (scrollLeft !== void 0) instance.scrollLeft = scrollLeft; // Set textContent, if children is an animatable value\n\n    if (children !== void 0) instance.textContent = children; // Set styles ...\n\n    for (let styleName in style) {\n      if (!style.hasOwnProperty(styleName)) continue;\n      var isCustomProperty = styleName.indexOf('--') === 0;\n      var styleValue = dangerousStyleValue(styleName, style[styleName], isCustomProperty);\n      if (styleName === 'float') styleName = 'cssFloat';\n      if (isCustomProperty) instance.style.setProperty(styleName, styleValue);else instance.style[styleName] = styleValue;\n    } // Set attributes ...\n\n\n    for (let name in attributes) {\n      // Attributes are written in dash case\n      const dashCase = filter ? name : attributeCache[name] || (attributeCache[name] = name.replace(/([A-Z])/g, n => '-' + n.toLowerCase()));\n      if (typeof instance.getAttribute(dashCase) !== 'undefined') instance.setAttribute(dashCase, attributes[name]);\n    }\n\n    return;\n  } else return false;\n}, style => style);\n\nconst domElements = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', // SVG\n'circle', 'clipPath', 'defs', 'ellipse', 'foreignObject', 'g', 'image', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\n// Extend animated with all the available THREE elements\nconst apply = merge(createAnimatedComponent, false);\nconst extendedAnimated = apply(domElements);\n\nexport { apply, config, extendedAnimated as animated, extendedAnimated as a, interpolate$1 as interpolate, Globals, useSpring, useTrail, useTransition, useChain, useSprings };\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\n// Handle legacy names for image queries.\nvar convertProps = function convertProps(props) {\n  var convertedProps = (0, _extends2.default)({}, props);\n\n  if (convertedProps.resolutions) {\n    convertedProps.fixed = convertedProps.resolutions;\n    delete convertedProps.resolutions;\n  }\n\n  if (convertedProps.sizes) {\n    convertedProps.fluid = convertedProps.sizes;\n    delete convertedProps.sizes;\n  }\n\n  return convertedProps;\n}; // Cache if we've seen an image before so we don't bother with\n// lazy-loading & fading in on subsequent mounts.\n\n\nvar imageCache = Object.create({});\n\nvar inImageCache = function inImageCache(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n  return imageCache[src] || false;\n};\n\nvar activateCacheForImage = function activateCacheForImage(props) {\n  var convertedProps = convertProps(props); // Find src\n\n  var src = convertedProps.fluid ? convertedProps.fluid.src : convertedProps.fixed.src;\n  imageCache[src] = true;\n};\n\nvar io;\nvar listeners = new WeakMap();\n\nfunction getIO() {\n  if (typeof io === \"undefined\" && typeof window !== \"undefined\" && window.IntersectionObserver) {\n    io = new window.IntersectionObserver(function (entries) {\n      entries.forEach(function (entry) {\n        if (listeners.has(entry.target)) {\n          var cb = listeners.get(entry.target); // Edge doesn't currently support isIntersecting, so also test for an intersectionRatio > 0\n\n          if (entry.isIntersecting || entry.intersectionRatio > 0) {\n            io.unobserve(entry.target);\n            listeners.delete(entry.target);\n            cb();\n          }\n        }\n      });\n    }, {\n      rootMargin: \"200px\"\n    });\n  }\n\n  return io;\n}\n\nvar listenToIntersections = function listenToIntersections(el, cb) {\n  var observer = getIO();\n\n  if (observer) {\n    observer.observe(el);\n    listeners.set(el, cb);\n  }\n\n  return function () {\n    observer.unobserve(el);\n    listeners.delete(el);\n  };\n};\n\nvar noscriptImg = function noscriptImg(props) {\n  // Check if prop exists before adding each attribute to the string output below to prevent\n  // HTML validation issues caused by empty values like width=\"\" and height=\"\"\n  var src = props.src ? \"src=\\\"\" + props.src + \"\\\" \" : \"src=\\\"\\\" \"; // required attribute\n\n  var sizes = props.sizes ? \"sizes=\\\"\" + props.sizes + \"\\\" \" : \"\";\n  var srcSetWebp = props.srcSetWebp ? \"<source type='image/webp' srcset=\\\"\" + props.srcSetWebp + \"\\\" \" + sizes + \"/>\" : \"\";\n  var srcSet = props.srcSet ? \"srcset=\\\"\" + props.srcSet + \"\\\" \" : \"\";\n  var title = props.title ? \"title=\\\"\" + props.title + \"\\\" \" : \"\";\n  var alt = props.alt ? \"alt=\\\"\" + props.alt + \"\\\" \" : \"alt=\\\"\\\" \"; // required attribute\n\n  var width = props.width ? \"width=\\\"\" + props.width + \"\\\" \" : \"\";\n  var height = props.height ? \"height=\\\"\" + props.height + \"\\\" \" : \"\";\n  var crossOrigin = props.crossOrigin ? \"crossorigin=\\\"\" + props.crossOrigin + \"\\\" \" : \"\";\n  return \"<picture>\" + srcSetWebp + \"<img \" + width + height + sizes + srcSet + src + alt + title + crossOrigin + \"style=\\\"position:absolute;top:0;left:0;opacity:1;width:100%;height:100%;object-fit:cover;object-position:center\\\"/></picture>\";\n};\n\nvar Img = _react.default.forwardRef(function (props, ref) {\n  var sizes = props.sizes,\n      srcSet = props.srcSet,\n      src = props.src,\n      style = props.style,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      otherProps = (0, _objectWithoutPropertiesLoose2.default)(props, [\"sizes\", \"srcSet\", \"src\", \"style\", \"onLoad\", \"onError\"]);\n  return _react.default.createElement(\"img\", (0, _extends2.default)({\n    sizes: sizes,\n    srcSet: srcSet,\n    src: src\n  }, otherProps, {\n    onLoad: onLoad,\n    onError: onError,\n    ref: ref,\n    style: (0, _extends2.default)({\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"cover\",\n      objectPosition: \"center\"\n    }, style)\n  }));\n});\n\nImg.propTypes = {\n  style: _propTypes.default.object,\n  onError: _propTypes.default.func,\n  onLoad: _propTypes.default.func\n};\n\nvar Image =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(Image, _React$Component);\n\n  function Image(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // default settings for browser without Intersection Observer available\n\n    var isVisible = true;\n    var imgLoaded = false;\n    var imgCached = false;\n    var IOSupported = false;\n    var fadeIn = props.fadeIn; // If this image has already been loaded before then we can assume it's\n    // already in the browser cache so it's cheap to just show directly.\n\n    var seenBefore = inImageCache(props); // browser with Intersection Observer available\n\n    if (!seenBefore && typeof window !== \"undefined\" && window.IntersectionObserver) {\n      isVisible = false;\n      IOSupported = true;\n    } // Never render image during SSR\n\n\n    if (typeof window === \"undefined\") {\n      isVisible = false;\n    } // Force render for critical images\n\n\n    if (props.critical) {\n      isVisible = true;\n      IOSupported = false;\n    }\n\n    var hasNoScript = !(props.critical && !props.fadeIn);\n    _this.state = {\n      isVisible: isVisible,\n      imgLoaded: imgLoaded,\n      imgCached: imgCached,\n      IOSupported: IOSupported,\n      fadeIn: fadeIn,\n      hasNoScript: hasNoScript,\n      seenBefore: seenBefore\n    };\n    _this.imageRef = _react.default.createRef();\n    _this.handleImageLoaded = _this.handleImageLoaded.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = Image.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    if (this.state.isVisible && typeof this.props.onStartLoad === \"function\") {\n      this.props.onStartLoad({\n        wasCached: inImageCache(this.props)\n      });\n    }\n\n    if (this.props.critical) {\n      var img = this.imageRef.current;\n\n      if (img && img.complete) {\n        this.handleImageLoaded();\n      }\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.cleanUpListeners) {\n      this.cleanUpListeners();\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    if (this.state.IOSupported && ref) {\n      this.cleanUpListeners = listenToIntersections(ref, function () {\n        var imageInCache = inImageCache(_this2.props);\n\n        if (!_this2.state.isVisible && typeof _this2.props.onStartLoad === \"function\") {\n          _this2.props.onStartLoad({\n            wasCached: imageInCache\n          });\n        } // imgCached and imgLoaded must update after isVisible,\n        // Once isVisible is true, imageRef becomes accessible, which imgCached needs access to.\n        // imgLoaded and imgCached are in a 2nd setState call to be changed together,\n        // avoiding initiating unnecessary animation frames from style changes.\n\n\n        _this2.setState({\n          isVisible: true\n        }, function () {\n          return _this2.setState({\n            imgLoaded: imageInCache,\n            imgCached: _this2.imageRef.current.currentSrc.length > 0\n          });\n        });\n      });\n    }\n  };\n\n  _proto.handleImageLoaded = function handleImageLoaded() {\n    activateCacheForImage(this.props);\n    this.setState({\n      imgLoaded: true\n    });\n\n    if (this.state.seenBefore) {\n      this.setState({\n        fadeIn: false\n      });\n    }\n\n    if (this.props.onLoad) {\n      this.props.onLoad();\n    }\n  };\n\n  _proto.render = function render() {\n    var _convertProps = convertProps(this.props),\n        title = _convertProps.title,\n        alt = _convertProps.alt,\n        className = _convertProps.className,\n        _convertProps$style = _convertProps.style,\n        style = _convertProps$style === void 0 ? {} : _convertProps$style,\n        _convertProps$imgStyl = _convertProps.imgStyle,\n        imgStyle = _convertProps$imgStyl === void 0 ? {} : _convertProps$imgStyl,\n        _convertProps$placeho = _convertProps.placeholderStyle,\n        placeholderStyle = _convertProps$placeho === void 0 ? {} : _convertProps$placeho,\n        placeholderClassName = _convertProps.placeholderClassName,\n        fluid = _convertProps.fluid,\n        fixed = _convertProps.fixed,\n        backgroundColor = _convertProps.backgroundColor,\n        Tag = _convertProps.Tag,\n        itemProp = _convertProps.itemProp;\n\n    var shouldReveal = this.state.imgLoaded || this.state.fadeIn === false;\n    var shouldFadeIn = this.state.fadeIn === true && !this.state.imgCached;\n    var durationFadeIn = \"0.5s\";\n    var imageStyle = (0, _extends2.default)({\n      opacity: shouldReveal ? 1 : 0,\n      transition: shouldFadeIn ? \"opacity \" + durationFadeIn : \"none\"\n    }, imgStyle);\n    var bgColor = typeof backgroundColor === \"boolean\" ? \"lightgray\" : backgroundColor;\n    var delayHideStyle = {\n      transitionDelay: durationFadeIn\n    };\n    var imagePlaceholderStyle = (0, _extends2.default)({\n      opacity: this.state.imgLoaded ? 0 : 1\n    }, shouldFadeIn && delayHideStyle, imgStyle, placeholderStyle);\n    var placeholderImageProps = {\n      title: title,\n      alt: !this.state.isVisible ? alt : \"\",\n      style: imagePlaceholderStyle,\n      className: placeholderClassName\n    };\n\n    if (fluid) {\n      var image = fluid;\n      return _react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: (0, _extends2.default)({\n          position: \"relative\",\n          overflow: \"hidden\"\n        }, style),\n        ref: this.handleRef,\n        key: \"fluid-\" + JSON.stringify(image.srcSet)\n      }, _react.default.createElement(Tag, {\n        style: {\n          width: \"100%\",\n          paddingBottom: 100 / image.aspectRatio + \"%\"\n        }\n      }), bgColor && _react.default.createElement(Tag, {\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          right: 0,\n          left: 0\n        }, shouldFadeIn && delayHideStyle)\n      }), image.base64 && _react.default.createElement(Img, (0, _extends2.default)({\n        src: image.base64\n      }, placeholderImageProps)), image.tracedSVG && _react.default.createElement(Img, (0, _extends2.default)({\n        src: image.tracedSVG\n      }, placeholderImageProps)), this.state.isVisible && _react.default.createElement(\"picture\", null, image.srcSetWebp && _react.default.createElement(\"source\", {\n        type: \"image/webp\",\n        srcSet: image.srcSetWebp,\n        sizes: image.sizes\n      }), _react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        sizes: image.sizes,\n        src: image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp\n      })), this.state.hasNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title\n          }, image))\n        }\n      }));\n    }\n\n    if (fixed) {\n      var _image = fixed;\n      var divStyle = (0, _extends2.default)({\n        position: \"relative\",\n        overflow: \"hidden\",\n        display: \"inline-block\",\n        width: _image.width,\n        height: _image.height\n      }, style);\n\n      if (style.display === \"inherit\") {\n        delete divStyle.display;\n      }\n\n      return _react.default.createElement(Tag, {\n        className: (className ? className : \"\") + \" gatsby-image-wrapper\",\n        style: divStyle,\n        ref: this.handleRef,\n        key: \"fixed-\" + JSON.stringify(_image.srcSet)\n      }, bgColor && _react.default.createElement(Tag, {\n        title: title,\n        style: (0, _extends2.default)({\n          backgroundColor: bgColor,\n          width: _image.width,\n          opacity: !this.state.imgLoaded ? 1 : 0,\n          height: _image.height\n        }, shouldFadeIn && delayHideStyle)\n      }), _image.base64 && _react.default.createElement(Img, (0, _extends2.default)({\n        src: _image.base64\n      }, placeholderImageProps)), _image.tracedSVG && _react.default.createElement(Img, (0, _extends2.default)({\n        src: _image.tracedSVG\n      }, placeholderImageProps)), this.state.isVisible && _react.default.createElement(\"picture\", null, _image.srcSetWebp && _react.default.createElement(\"source\", {\n        type: \"image/webp\",\n        srcSet: _image.srcSetWebp,\n        sizes: _image.sizes\n      }), _react.default.createElement(Img, {\n        alt: alt,\n        title: title,\n        width: _image.width,\n        height: _image.height,\n        sizes: _image.sizes,\n        src: _image.src,\n        crossOrigin: this.props.crossOrigin,\n        srcSet: _image.srcSet,\n        style: imageStyle,\n        ref: this.imageRef,\n        onLoad: this.handleImageLoaded,\n        onError: this.props.onError,\n        itemProp: itemProp\n      })), this.state.hasNoScript && _react.default.createElement(\"noscript\", {\n        dangerouslySetInnerHTML: {\n          __html: noscriptImg((0, _extends2.default)({\n            alt: alt,\n            title: title\n          }, _image))\n        }\n      }));\n    }\n\n    return null;\n  };\n\n  return Image;\n}(_react.default.Component);\n\nImage.defaultProps = {\n  critical: false,\n  fadeIn: true,\n  alt: \"\",\n  Tag: \"div\"\n};\n\nvar fixedObject = _propTypes.default.shape({\n  width: _propTypes.default.number.isRequired,\n  height: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string\n});\n\nvar fluidObject = _propTypes.default.shape({\n  aspectRatio: _propTypes.default.number.isRequired,\n  src: _propTypes.default.string.isRequired,\n  srcSet: _propTypes.default.string.isRequired,\n  sizes: _propTypes.default.string.isRequired,\n  base64: _propTypes.default.string,\n  tracedSVG: _propTypes.default.string,\n  srcWebp: _propTypes.default.string,\n  srcSetWebp: _propTypes.default.string\n});\n\nImage.propTypes = {\n  resolutions: fixedObject,\n  sizes: fluidObject,\n  fixed: fixedObject,\n  fluid: fluidObject,\n  fadeIn: _propTypes.default.bool,\n  title: _propTypes.default.string,\n  alt: _propTypes.default.string,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object]),\n  // Support Glamor's css prop.\n  critical: _propTypes.default.bool,\n  crossOrigin: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  style: _propTypes.default.object,\n  imgStyle: _propTypes.default.object,\n  placeholderStyle: _propTypes.default.object,\n  placeholderClassName: _propTypes.default.string,\n  backgroundColor: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.bool]),\n  onLoad: _propTypes.default.func,\n  onError: _propTypes.default.func,\n  onStartLoad: _propTypes.default.func,\n  Tag: _propTypes.default.string,\n  itemProp: _propTypes.default.string\n};\nvar _default = Image;\nexports.default = _default;","import { useSpring } from 'react-spring';\nimport { useState, useEffect } from 'react';\n\n/**\r\n * A collection of shims that provide minimal functionality of the ES6 collections.\r\n *\r\n * These implementations are not meant to be used outside of the ResizeObserver\r\n * modules as they cover only a limited range of use cases.\r\n */\r\n/* eslint-disable require-jsdoc, valid-jsdoc */\r\nvar MapShim = (function () {\r\n    if (typeof Map !== 'undefined') {\r\n        return Map;\r\n    }\r\n    /**\r\n     * Returns index in provided array that matches the specified key.\r\n     *\r\n     * @param {Array<Array>} arr\r\n     * @param {*} key\r\n     * @returns {number}\r\n     */\r\n    function getIndex(arr, key) {\r\n        var result = -1;\r\n        arr.some(function (entry, index) {\r\n            if (entry[0] === key) {\r\n                result = index;\r\n                return true;\r\n            }\r\n            return false;\r\n        });\r\n        return result;\r\n    }\r\n    return /** @class */ (function () {\r\n        function class_1() {\r\n            this.__entries__ = [];\r\n        }\r\n        Object.defineProperty(class_1.prototype, \"size\", {\r\n            /**\r\n             * @returns {boolean}\r\n             */\r\n            get: function () {\r\n                return this.__entries__.length;\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * @param {*} key\r\n         * @returns {*}\r\n         */\r\n        class_1.prototype.get = function (key) {\r\n            var index = getIndex(this.__entries__, key);\r\n            var entry = this.__entries__[index];\r\n            return entry && entry[1];\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @param {*} value\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.set = function (key, value) {\r\n            var index = getIndex(this.__entries__, key);\r\n            if (~index) {\r\n                this.__entries__[index][1] = value;\r\n            }\r\n            else {\r\n                this.__entries__.push([key, value]);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.delete = function (key) {\r\n            var entries = this.__entries__;\r\n            var index = getIndex(entries, key);\r\n            if (~index) {\r\n                entries.splice(index, 1);\r\n            }\r\n        };\r\n        /**\r\n         * @param {*} key\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.has = function (key) {\r\n            return !!~getIndex(this.__entries__, key);\r\n        };\r\n        /**\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.clear = function () {\r\n            this.__entries__.splice(0);\r\n        };\r\n        /**\r\n         * @param {Function} callback\r\n         * @param {*} [ctx=null]\r\n         * @returns {void}\r\n         */\r\n        class_1.prototype.forEach = function (callback, ctx) {\r\n            if (ctx === void 0) { ctx = null; }\r\n            for (var _i = 0, _a = this.__entries__; _i < _a.length; _i++) {\r\n                var entry = _a[_i];\r\n                callback.call(ctx, entry[1], entry[0]);\r\n            }\r\n        };\r\n        return class_1;\r\n    }());\r\n})();\n\n/**\r\n * Detects whether window and document objects are available in current environment.\r\n */\r\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && window.document === document;\n\n// Returns global object of a current environment.\r\nvar global$1 = (function () {\r\n    if (typeof global !== 'undefined' && global.Math === Math) {\r\n        return global;\r\n    }\r\n    if (typeof self !== 'undefined' && self.Math === Math) {\r\n        return self;\r\n    }\r\n    if (typeof window !== 'undefined' && window.Math === Math) {\r\n        return window;\r\n    }\r\n    // eslint-disable-next-line no-new-func\r\n    return Function('return this')();\r\n})();\n\n/**\r\n * A shim for the requestAnimationFrame which falls back to the setTimeout if\r\n * first one is not supported.\r\n *\r\n * @returns {number} Requests' identifier.\r\n */\r\nvar requestAnimationFrame$1 = (function () {\r\n    if (typeof requestAnimationFrame === 'function') {\r\n        // It's required to use a bounded function because IE sometimes throws\r\n        // an \"Invalid calling object\" error if rAF is invoked without the global\r\n        // object on the left hand side.\r\n        return requestAnimationFrame.bind(global$1);\r\n    }\r\n    return function (callback) { return setTimeout(function () { return callback(Date.now()); }, 1000 / 60); };\r\n})();\n\n// Defines minimum timeout before adding a trailing call.\r\nvar trailingTimeout = 2;\r\n/**\r\n * Creates a wrapper function which ensures that provided callback will be\r\n * invoked only once during the specified delay period.\r\n *\r\n * @param {Function} callback - Function to be invoked after the delay period.\r\n * @param {number} delay - Delay after which to invoke callback.\r\n * @returns {Function}\r\n */\r\nfunction throttle (callback, delay) {\r\n    var leadingCall = false, trailingCall = false, lastCallTime = 0;\r\n    /**\r\n     * Invokes the original callback function and schedules new invocation if\r\n     * the \"proxy\" was called during current request.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function resolvePending() {\r\n        if (leadingCall) {\r\n            leadingCall = false;\r\n            callback();\r\n        }\r\n        if (trailingCall) {\r\n            proxy();\r\n        }\r\n    }\r\n    /**\r\n     * Callback invoked after the specified delay. It will further postpone\r\n     * invocation of the original function delegating it to the\r\n     * requestAnimationFrame.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function timeoutCallback() {\r\n        requestAnimationFrame$1(resolvePending);\r\n    }\r\n    /**\r\n     * Schedules invocation of the original function.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    function proxy() {\r\n        var timeStamp = Date.now();\r\n        if (leadingCall) {\r\n            // Reject immediately following calls.\r\n            if (timeStamp - lastCallTime < trailingTimeout) {\r\n                return;\r\n            }\r\n            // Schedule new call to be in invoked when the pending one is resolved.\r\n            // This is important for \"transitions\" which never actually start\r\n            // immediately so there is a chance that we might miss one if change\r\n            // happens amids the pending invocation.\r\n            trailingCall = true;\r\n        }\r\n        else {\r\n            leadingCall = true;\r\n            trailingCall = false;\r\n            setTimeout(timeoutCallback, delay);\r\n        }\r\n        lastCallTime = timeStamp;\r\n    }\r\n    return proxy;\r\n}\n\n// Minimum delay before invoking the update of observers.\r\nvar REFRESH_DELAY = 20;\r\n// A list of substrings of CSS properties used to find transition events that\r\n// might affect dimensions of observed elements.\r\nvar transitionKeys = ['top', 'right', 'bottom', 'left', 'width', 'height', 'size', 'weight'];\r\n// Check if MutationObserver is available.\r\nvar mutationObserverSupported = typeof MutationObserver !== 'undefined';\r\n/**\r\n * Singleton controller class which handles updates of ResizeObserver instances.\r\n */\r\nvar ResizeObserverController = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserverController.\r\n     *\r\n     * @private\r\n     */\r\n    function ResizeObserverController() {\r\n        /**\r\n         * Indicates whether DOM listeners have been added.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.connected_ = false;\r\n        /**\r\n         * Tells that controller has subscribed for Mutation Events.\r\n         *\r\n         * @private {boolean}\r\n         */\r\n        this.mutationEventsAdded_ = false;\r\n        /**\r\n         * Keeps reference to the instance of MutationObserver.\r\n         *\r\n         * @private {MutationObserver}\r\n         */\r\n        this.mutationsObserver_ = null;\r\n        /**\r\n         * A list of connected observers.\r\n         *\r\n         * @private {Array<ResizeObserverSPI>}\r\n         */\r\n        this.observers_ = [];\r\n        this.onTransitionEnd_ = this.onTransitionEnd_.bind(this);\r\n        this.refresh = throttle(this.refresh.bind(this), REFRESH_DELAY);\r\n    }\r\n    /**\r\n     * Adds observer to observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be added.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.addObserver = function (observer) {\r\n        if (!~this.observers_.indexOf(observer)) {\r\n            this.observers_.push(observer);\r\n        }\r\n        // Add listeners if they haven't been added yet.\r\n        if (!this.connected_) {\r\n            this.connect_();\r\n        }\r\n    };\r\n    /**\r\n     * Removes observer from observers list.\r\n     *\r\n     * @param {ResizeObserverSPI} observer - Observer to be removed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.removeObserver = function (observer) {\r\n        var observers = this.observers_;\r\n        var index = observers.indexOf(observer);\r\n        // Remove observer if it's present in registry.\r\n        if (~index) {\r\n            observers.splice(index, 1);\r\n        }\r\n        // Remove listeners if controller has no connected observers.\r\n        if (!observers.length && this.connected_) {\r\n            this.disconnect_();\r\n        }\r\n    };\r\n    /**\r\n     * Invokes the update of observers. It will continue running updates insofar\r\n     * it detects changes.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.refresh = function () {\r\n        var changesDetected = this.updateObservers_();\r\n        // Continue running updates if changes have been detected as there might\r\n        // be future ones caused by CSS transitions.\r\n        if (changesDetected) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Updates every observer from observers list and notifies them of queued\r\n     * entries.\r\n     *\r\n     * @private\r\n     * @returns {boolean} Returns \"true\" if any observer has detected changes in\r\n     *      dimensions of it's elements.\r\n     */\r\n    ResizeObserverController.prototype.updateObservers_ = function () {\r\n        // Collect observers that have active observations.\r\n        var activeObservers = this.observers_.filter(function (observer) {\r\n            return observer.gatherActive(), observer.hasActive();\r\n        });\r\n        // Deliver notifications in a separate cycle in order to avoid any\r\n        // collisions between observers, e.g. when multiple instances of\r\n        // ResizeObserver are tracking the same element and the callback of one\r\n        // of them changes content dimensions of the observed target. Sometimes\r\n        // this may result in notifications being blocked for the rest of observers.\r\n        activeObservers.forEach(function (observer) { return observer.broadcastActive(); });\r\n        return activeObservers.length > 0;\r\n    };\r\n    /**\r\n     * Initializes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.connect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already added.\r\n        if (!isBrowser || this.connected_) {\r\n            return;\r\n        }\r\n        // Subscription to the \"Transitionend\" event is used as a workaround for\r\n        // delayed transitions. This way it's possible to capture at least the\r\n        // final state of an element.\r\n        document.addEventListener('transitionend', this.onTransitionEnd_);\r\n        window.addEventListener('resize', this.refresh);\r\n        if (mutationObserverSupported) {\r\n            this.mutationsObserver_ = new MutationObserver(this.refresh);\r\n            this.mutationsObserver_.observe(document, {\r\n                attributes: true,\r\n                childList: true,\r\n                characterData: true,\r\n                subtree: true\r\n            });\r\n        }\r\n        else {\r\n            document.addEventListener('DOMSubtreeModified', this.refresh);\r\n            this.mutationEventsAdded_ = true;\r\n        }\r\n        this.connected_ = true;\r\n    };\r\n    /**\r\n     * Removes DOM listeners.\r\n     *\r\n     * @private\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.disconnect_ = function () {\r\n        // Do nothing if running in a non-browser environment or if listeners\r\n        // have been already removed.\r\n        if (!isBrowser || !this.connected_) {\r\n            return;\r\n        }\r\n        document.removeEventListener('transitionend', this.onTransitionEnd_);\r\n        window.removeEventListener('resize', this.refresh);\r\n        if (this.mutationsObserver_) {\r\n            this.mutationsObserver_.disconnect();\r\n        }\r\n        if (this.mutationEventsAdded_) {\r\n            document.removeEventListener('DOMSubtreeModified', this.refresh);\r\n        }\r\n        this.mutationsObserver_ = null;\r\n        this.mutationEventsAdded_ = false;\r\n        this.connected_ = false;\r\n    };\r\n    /**\r\n     * \"Transitionend\" event handler.\r\n     *\r\n     * @private\r\n     * @param {TransitionEvent} event\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverController.prototype.onTransitionEnd_ = function (_a) {\r\n        var _b = _a.propertyName, propertyName = _b === void 0 ? '' : _b;\r\n        // Detect whether transition may affect dimensions of an element.\r\n        var isReflowProperty = transitionKeys.some(function (key) {\r\n            return !!~propertyName.indexOf(key);\r\n        });\r\n        if (isReflowProperty) {\r\n            this.refresh();\r\n        }\r\n    };\r\n    /**\r\n     * Returns instance of the ResizeObserverController.\r\n     *\r\n     * @returns {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.getInstance = function () {\r\n        if (!this.instance_) {\r\n            this.instance_ = new ResizeObserverController();\r\n        }\r\n        return this.instance_;\r\n    };\r\n    /**\r\n     * Holds reference to the controller's instance.\r\n     *\r\n     * @private {ResizeObserverController}\r\n     */\r\n    ResizeObserverController.instance_ = null;\r\n    return ResizeObserverController;\r\n}());\n\n/**\r\n * Defines non-writable/enumerable properties of the provided target object.\r\n *\r\n * @param {Object} target - Object for which to define properties.\r\n * @param {Object} props - Properties to be defined.\r\n * @returns {Object} Target object.\r\n */\r\nvar defineConfigurable = (function (target, props) {\r\n    for (var _i = 0, _a = Object.keys(props); _i < _a.length; _i++) {\r\n        var key = _a[_i];\r\n        Object.defineProperty(target, key, {\r\n            value: props[key],\r\n            enumerable: false,\r\n            writable: false,\r\n            configurable: true\r\n        });\r\n    }\r\n    return target;\r\n});\n\n/**\r\n * Returns the global object associated with provided element.\r\n *\r\n * @param {Object} target\r\n * @returns {Object}\r\n */\r\nvar getWindowOf = (function (target) {\r\n    // Assume that the element is an instance of Node, which means that it\r\n    // has the \"ownerDocument\" property from which we can retrieve a\r\n    // corresponding global object.\r\n    var ownerGlobal = target && target.ownerDocument && target.ownerDocument.defaultView;\r\n    // Return the local global object if it's not possible extract one from\r\n    // provided element.\r\n    return ownerGlobal || global$1;\r\n});\n\n// Placeholder of an empty content rectangle.\r\nvar emptyRect = createRectInit(0, 0, 0, 0);\r\n/**\r\n * Converts provided string to a number.\r\n *\r\n * @param {number|string} value\r\n * @returns {number}\r\n */\r\nfunction toFloat(value) {\r\n    return parseFloat(value) || 0;\r\n}\r\n/**\r\n * Extracts borders size from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @param {...string} positions - Borders positions (top, right, ...)\r\n * @returns {number}\r\n */\r\nfunction getBordersSize(styles) {\r\n    var positions = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        positions[_i - 1] = arguments[_i];\r\n    }\r\n    return positions.reduce(function (size, position) {\r\n        var value = styles['border-' + position + '-width'];\r\n        return size + toFloat(value);\r\n    }, 0);\r\n}\r\n/**\r\n * Extracts paddings sizes from provided styles.\r\n *\r\n * @param {CSSStyleDeclaration} styles\r\n * @returns {Object} Paddings box.\r\n */\r\nfunction getPaddings(styles) {\r\n    var positions = ['top', 'right', 'bottom', 'left'];\r\n    var paddings = {};\r\n    for (var _i = 0, positions_1 = positions; _i < positions_1.length; _i++) {\r\n        var position = positions_1[_i];\r\n        var value = styles['padding-' + position];\r\n        paddings[position] = toFloat(value);\r\n    }\r\n    return paddings;\r\n}\r\n/**\r\n * Calculates content rectangle of provided SVG element.\r\n *\r\n * @param {SVGGraphicsElement} target - Element content rectangle of which needs\r\n *      to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getSVGContentRect(target) {\r\n    var bbox = target.getBBox();\r\n    return createRectInit(0, 0, bbox.width, bbox.height);\r\n}\r\n/**\r\n * Calculates content rectangle of provided HTMLElement.\r\n *\r\n * @param {HTMLElement} target - Element for which to calculate the content rectangle.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getHTMLElementContentRect(target) {\r\n    // Client width & height properties can't be\r\n    // used exclusively as they provide rounded values.\r\n    var clientWidth = target.clientWidth, clientHeight = target.clientHeight;\r\n    // By this condition we can catch all non-replaced inline, hidden and\r\n    // detached elements. Though elements with width & height properties less\r\n    // than 0.5 will be discarded as well.\r\n    //\r\n    // Without it we would need to implement separate methods for each of\r\n    // those cases and it's not possible to perform a precise and performance\r\n    // effective test for hidden elements. E.g. even jQuery's ':visible' filter\r\n    // gives wrong results for elements with width & height less than 0.5.\r\n    if (!clientWidth && !clientHeight) {\r\n        return emptyRect;\r\n    }\r\n    var styles = getWindowOf(target).getComputedStyle(target);\r\n    var paddings = getPaddings(styles);\r\n    var horizPad = paddings.left + paddings.right;\r\n    var vertPad = paddings.top + paddings.bottom;\r\n    // Computed styles of width & height are being used because they are the\r\n    // only dimensions available to JS that contain non-rounded values. It could\r\n    // be possible to utilize the getBoundingClientRect if only it's data wasn't\r\n    // affected by CSS transformations let alone paddings, borders and scroll bars.\r\n    var width = toFloat(styles.width), height = toFloat(styles.height);\r\n    // Width & height include paddings and borders when the 'border-box' box\r\n    // model is applied (except for IE).\r\n    if (styles.boxSizing === 'border-box') {\r\n        // Following conditions are required to handle Internet Explorer which\r\n        // doesn't include paddings and borders to computed CSS dimensions.\r\n        //\r\n        // We can say that if CSS dimensions + paddings are equal to the \"client\"\r\n        // properties then it's either IE, and thus we don't need to subtract\r\n        // anything, or an element merely doesn't have paddings/borders styles.\r\n        if (Math.round(width + horizPad) !== clientWidth) {\r\n            width -= getBordersSize(styles, 'left', 'right') + horizPad;\r\n        }\r\n        if (Math.round(height + vertPad) !== clientHeight) {\r\n            height -= getBordersSize(styles, 'top', 'bottom') + vertPad;\r\n        }\r\n    }\r\n    // Following steps can't be applied to the document's root element as its\r\n    // client[Width/Height] properties represent viewport area of the window.\r\n    // Besides, it's as well not necessary as the <html> itself neither has\r\n    // rendered scroll bars nor it can be clipped.\r\n    if (!isDocumentElement(target)) {\r\n        // In some browsers (only in Firefox, actually) CSS width & height\r\n        // include scroll bars size which can be removed at this step as scroll\r\n        // bars are the only difference between rounded dimensions + paddings\r\n        // and \"client\" properties, though that is not always true in Chrome.\r\n        var vertScrollbar = Math.round(width + horizPad) - clientWidth;\r\n        var horizScrollbar = Math.round(height + vertPad) - clientHeight;\r\n        // Chrome has a rather weird rounding of \"client\" properties.\r\n        // E.g. for an element with content width of 314.2px it sometimes gives\r\n        // the client width of 315px and for the width of 314.7px it may give\r\n        // 314px. And it doesn't happen all the time. So just ignore this delta\r\n        // as a non-relevant.\r\n        if (Math.abs(vertScrollbar) !== 1) {\r\n            width -= vertScrollbar;\r\n        }\r\n        if (Math.abs(horizScrollbar) !== 1) {\r\n            height -= horizScrollbar;\r\n        }\r\n    }\r\n    return createRectInit(paddings.left, paddings.top, width, height);\r\n}\r\n/**\r\n * Checks whether provided element is an instance of the SVGGraphicsElement.\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nvar isSVGGraphicsElement = (function () {\r\n    // Some browsers, namely IE and Edge, don't have the SVGGraphicsElement\r\n    // interface.\r\n    if (typeof SVGGraphicsElement !== 'undefined') {\r\n        return function (target) { return target instanceof getWindowOf(target).SVGGraphicsElement; };\r\n    }\r\n    // If it's so, then check that element is at least an instance of the\r\n    // SVGElement and that it has the \"getBBox\" method.\r\n    // eslint-disable-next-line no-extra-parens\r\n    return function (target) { return (target instanceof getWindowOf(target).SVGElement &&\r\n        typeof target.getBBox === 'function'); };\r\n})();\r\n/**\r\n * Checks whether provided element is a document element (<html>).\r\n *\r\n * @param {Element} target - Element to be checked.\r\n * @returns {boolean}\r\n */\r\nfunction isDocumentElement(target) {\r\n    return target === getWindowOf(target).document.documentElement;\r\n}\r\n/**\r\n * Calculates an appropriate content rectangle for provided html or svg element.\r\n *\r\n * @param {Element} target - Element content rectangle of which needs to be calculated.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction getContentRect(target) {\r\n    if (!isBrowser) {\r\n        return emptyRect;\r\n    }\r\n    if (isSVGGraphicsElement(target)) {\r\n        return getSVGContentRect(target);\r\n    }\r\n    return getHTMLElementContentRect(target);\r\n}\r\n/**\r\n * Creates rectangle with an interface of the DOMRectReadOnly.\r\n * Spec: https://drafts.fxtf.org/geometry/#domrectreadonly\r\n *\r\n * @param {DOMRectInit} rectInit - Object with rectangle's x/y coordinates and dimensions.\r\n * @returns {DOMRectReadOnly}\r\n */\r\nfunction createReadOnlyRect(_a) {\r\n    var x = _a.x, y = _a.y, width = _a.width, height = _a.height;\r\n    // If DOMRectReadOnly is available use it as a prototype for the rectangle.\r\n    var Constr = typeof DOMRectReadOnly !== 'undefined' ? DOMRectReadOnly : Object;\r\n    var rect = Object.create(Constr.prototype);\r\n    // Rectangle's properties are not writable and non-enumerable.\r\n    defineConfigurable(rect, {\r\n        x: x, y: y, width: width, height: height,\r\n        top: y,\r\n        right: x + width,\r\n        bottom: height + y,\r\n        left: x\r\n    });\r\n    return rect;\r\n}\r\n/**\r\n * Creates DOMRectInit object based on the provided dimensions and the x/y coordinates.\r\n * Spec: https://drafts.fxtf.org/geometry/#dictdef-domrectinit\r\n *\r\n * @param {number} x - X coordinate.\r\n * @param {number} y - Y coordinate.\r\n * @param {number} width - Rectangle's width.\r\n * @param {number} height - Rectangle's height.\r\n * @returns {DOMRectInit}\r\n */\r\nfunction createRectInit(x, y, width, height) {\r\n    return { x: x, y: y, width: width, height: height };\r\n}\n\n/**\r\n * Class that is responsible for computations of the content rectangle of\r\n * provided DOM element and for keeping track of it's changes.\r\n */\r\nvar ResizeObservation = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObservation.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     */\r\n    function ResizeObservation(target) {\r\n        /**\r\n         * Broadcasted width of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastWidth = 0;\r\n        /**\r\n         * Broadcasted height of content rectangle.\r\n         *\r\n         * @type {number}\r\n         */\r\n        this.broadcastHeight = 0;\r\n        /**\r\n         * Reference to the last observed content rectangle.\r\n         *\r\n         * @private {DOMRectInit}\r\n         */\r\n        this.contentRect_ = createRectInit(0, 0, 0, 0);\r\n        this.target = target;\r\n    }\r\n    /**\r\n     * Updates content rectangle and tells whether it's width or height properties\r\n     * have changed since the last broadcast.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObservation.prototype.isActive = function () {\r\n        var rect = getContentRect(this.target);\r\n        this.contentRect_ = rect;\r\n        return (rect.width !== this.broadcastWidth ||\r\n            rect.height !== this.broadcastHeight);\r\n    };\r\n    /**\r\n     * Updates 'broadcastWidth' and 'broadcastHeight' properties with a data\r\n     * from the corresponding properties of the last observed content rectangle.\r\n     *\r\n     * @returns {DOMRectInit} Last observed content rectangle.\r\n     */\r\n    ResizeObservation.prototype.broadcastRect = function () {\r\n        var rect = this.contentRect_;\r\n        this.broadcastWidth = rect.width;\r\n        this.broadcastHeight = rect.height;\r\n        return rect;\r\n    };\r\n    return ResizeObservation;\r\n}());\n\nvar ResizeObserverEntry = /** @class */ (function () {\r\n    /**\r\n     * Creates an instance of ResizeObserverEntry.\r\n     *\r\n     * @param {Element} target - Element that is being observed.\r\n     * @param {DOMRectInit} rectInit - Data of the element's content rectangle.\r\n     */\r\n    function ResizeObserverEntry(target, rectInit) {\r\n        var contentRect = createReadOnlyRect(rectInit);\r\n        // According to the specification following properties are not writable\r\n        // and are also not enumerable in the native implementation.\r\n        //\r\n        // Property accessors are not being used as they'd require to define a\r\n        // private WeakMap storage which may cause memory leaks in browsers that\r\n        // don't support this type of collections.\r\n        defineConfigurable(this, { target: target, contentRect: contentRect });\r\n    }\r\n    return ResizeObserverEntry;\r\n}());\n\nvar ResizeObserverSPI = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback function that is invoked\r\n     *      when one of the observed elements changes it's content dimensions.\r\n     * @param {ResizeObserverController} controller - Controller instance which\r\n     *      is responsible for the updates of observer.\r\n     * @param {ResizeObserver} callbackCtx - Reference to the public\r\n     *      ResizeObserver instance which will be passed to callback function.\r\n     */\r\n    function ResizeObserverSPI(callback, controller, callbackCtx) {\r\n        /**\r\n         * Collection of resize observations that have detected changes in dimensions\r\n         * of elements.\r\n         *\r\n         * @private {Array<ResizeObservation>}\r\n         */\r\n        this.activeObservations_ = [];\r\n        /**\r\n         * Registry of the ResizeObservation instances.\r\n         *\r\n         * @private {Map<Element, ResizeObservation>}\r\n         */\r\n        this.observations_ = new MapShim();\r\n        if (typeof callback !== 'function') {\r\n            throw new TypeError('The callback provided as parameter 1 is not a function.');\r\n        }\r\n        this.callback_ = callback;\r\n        this.controller_ = controller;\r\n        this.callbackCtx_ = callbackCtx;\r\n    }\r\n    /**\r\n     * Starts observing provided element.\r\n     *\r\n     * @param {Element} target - Element to be observed.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.observe = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is already being observed.\r\n        if (observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.set(target, new ResizeObservation(target));\r\n        this.controller_.addObserver(this);\r\n        // Force the update of observations.\r\n        this.controller_.refresh();\r\n    };\r\n    /**\r\n     * Stops observing provided element.\r\n     *\r\n     * @param {Element} target - Element to stop observing.\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.unobserve = function (target) {\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        // Do nothing if current environment doesn't have the Element interface.\r\n        if (typeof Element === 'undefined' || !(Element instanceof Object)) {\r\n            return;\r\n        }\r\n        if (!(target instanceof getWindowOf(target).Element)) {\r\n            throw new TypeError('parameter 1 is not of type \"Element\".');\r\n        }\r\n        var observations = this.observations_;\r\n        // Do nothing if element is not being observed.\r\n        if (!observations.has(target)) {\r\n            return;\r\n        }\r\n        observations.delete(target);\r\n        if (!observations.size) {\r\n            this.controller_.removeObserver(this);\r\n        }\r\n    };\r\n    /**\r\n     * Stops observing all elements.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.disconnect = function () {\r\n        this.clearActive();\r\n        this.observations_.clear();\r\n        this.controller_.removeObserver(this);\r\n    };\r\n    /**\r\n     * Collects observation instances the associated element of which has changed\r\n     * it's content rectangle.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.gatherActive = function () {\r\n        var _this = this;\r\n        this.clearActive();\r\n        this.observations_.forEach(function (observation) {\r\n            if (observation.isActive()) {\r\n                _this.activeObservations_.push(observation);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Invokes initial callback function with a list of ResizeObserverEntry\r\n     * instances collected from active resize observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.broadcastActive = function () {\r\n        // Do nothing if observer doesn't have active observations.\r\n        if (!this.hasActive()) {\r\n            return;\r\n        }\r\n        var ctx = this.callbackCtx_;\r\n        // Create ResizeObserverEntry instance for every active observation.\r\n        var entries = this.activeObservations_.map(function (observation) {\r\n            return new ResizeObserverEntry(observation.target, observation.broadcastRect());\r\n        });\r\n        this.callback_.call(ctx, entries, ctx);\r\n        this.clearActive();\r\n    };\r\n    /**\r\n     * Clears the collection of active observations.\r\n     *\r\n     * @returns {void}\r\n     */\r\n    ResizeObserverSPI.prototype.clearActive = function () {\r\n        this.activeObservations_.splice(0);\r\n    };\r\n    /**\r\n     * Tells whether observer has active observations.\r\n     *\r\n     * @returns {boolean}\r\n     */\r\n    ResizeObserverSPI.prototype.hasActive = function () {\r\n        return this.activeObservations_.length > 0;\r\n    };\r\n    return ResizeObserverSPI;\r\n}());\n\n// Registry of internal observers. If WeakMap is not available use current shim\r\n// for the Map collection as it has all required methods and because WeakMap\r\n// can't be fully polyfilled anyway.\r\nvar observers = typeof WeakMap !== 'undefined' ? new WeakMap() : new MapShim();\r\n/**\r\n * ResizeObserver API. Encapsulates the ResizeObserver SPI implementation\r\n * exposing only those methods and properties that are defined in the spec.\r\n */\r\nvar ResizeObserver = /** @class */ (function () {\r\n    /**\r\n     * Creates a new instance of ResizeObserver.\r\n     *\r\n     * @param {ResizeObserverCallback} callback - Callback that is invoked when\r\n     *      dimensions of the observed elements change.\r\n     */\r\n    function ResizeObserver(callback) {\r\n        if (!(this instanceof ResizeObserver)) {\r\n            throw new TypeError('Cannot call a class as a function.');\r\n        }\r\n        if (!arguments.length) {\r\n            throw new TypeError('1 argument required, but only 0 present.');\r\n        }\r\n        var controller = ResizeObserverController.getInstance();\r\n        var observer = new ResizeObserverSPI(callback, controller, this);\r\n        observers.set(this, observer);\r\n    }\r\n    return ResizeObserver;\r\n}());\r\n// Expose public methods of ResizeObserver.\r\n[\r\n    'observe',\r\n    'unobserve',\r\n    'disconnect'\r\n].forEach(function (method) {\r\n    ResizeObserver.prototype[method] = function () {\r\n        var _a;\r\n        return (_a = observers.get(this))[method].apply(_a, arguments);\r\n    };\r\n});\n\nvar index = (function () {\r\n    // Export existing implementation if available.\r\n    if (typeof global$1.ResizeObserver !== 'undefined') {\r\n        return global$1.ResizeObserver;\r\n    }\r\n    return ResizeObserver;\r\n})();\n\nvar initialBounds = { left: 0, top: 0, width: 0, height: 0 };\r\nfunction useBoundingClientRect(ref) {\r\n    var _a = useState(initialBounds), bounds = _a[0], set = _a[1];\r\n    var ro = useState(function () {\r\n        return new index(function (_a) {\r\n            var entry = _a[0];\r\n            return set(entry.target.getBoundingClientRect());\r\n        });\r\n    })[0];\r\n    useEffect(function () {\r\n        if (ref.current)\r\n            ro.observe(ref.current);\r\n        return function () { return ro.disconnect(); };\r\n    }, []);\r\n    return bounds;\r\n}\r\nvar use3dEffect = function (ref) {\r\n    var _a = useSpring(function () { return ({\r\n        xys: [0, 0, 1],\r\n        config: { mass: 5, tension: 350, friction: 40 }\r\n    }); }), props = _a[0], set = _a[1];\r\n    var _b = useBoundingClientRect(ref), top = _b.top, left = _b.left, width = _b.width, height = _b.height;\r\n    var calc = function (x, y) { return [\r\n        -((top + height / 2 - y) / (height / 2)) * 10,\r\n        -((left + width / 2 - x) / (width / 2)) * 10,\r\n        1.1\r\n    ]; };\r\n    var trans = function (x, y, s) {\r\n        return \"perspective(1000px) rotateX(\" + x + \"deg) rotateY(\" + -y + \"deg) scale(\" + s + \")\";\r\n    };\r\n    return {\r\n        style: {\r\n            // @ts-ignore\r\n            transform: props.xys.interpolate(trans)\r\n        },\r\n        onMouseLeave: function () { return set({ xys: [0, 0, 1] }); },\r\n        // @ts-ignore\r\n        onMouseMove: function (_a) {\r\n            var x = _a.pageX, y = _a.pageY;\r\n            return set({ xys: calc(x, y) });\r\n        }\r\n    };\r\n};\n\nexport { use3dEffect };\n//# sourceMappingURL=index.es.js.map\n"],"sourceRoot":""}